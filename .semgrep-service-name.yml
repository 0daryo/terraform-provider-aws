# Generated by internal/generate/servicesemgrep/main.go; DO NOT EDIT.
rules:
  - id: aws-in-func-name
    languages:
      - go
    message: Do not use "AWS" in func name inside AWS Provider
    paths:
      include:
        - internal
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AWS"
    severity: WARNING
  - id: aws-in-const-name
    languages:
      - go
    message: Do not use "AWS" in const name inside AWS Provider
    paths:
      include:
        - internal
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AWS"
    severity: WARNING
  - id: aws-in-var-name
    languages:
      - go
    message: Do not use "AWS" in var name inside AWS Provider
    paths:
      include:
      - internal
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AWS"
    severity: WARNING
  - id: accessanalyzer-in-func-name
    languages:
      - go
    message: Do not use "AccessAnalyzer" in func name inside accessanalyzer package
    paths:
      include:
        - internal/service/accessanalyzer
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AccessAnalyzer"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: accessanalyzer-in-test-name
    languages:
      - go
    message: Include "AccessAnalyzer" in test name
    paths:
      include:
        - internal/service/accessanalyzer/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAccessAnalyzer"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: accessanalyzer-in-const-name
    languages:
      - go
    message: Do not use "AccessAnalyzer" in const name inside accessanalyzer package
    paths:
      include:
        - internal/service/accessanalyzer
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AccessAnalyzer"
    severity: WARNING
  - id: accessanalyzer-in-var-name
    languages:
      - go
    message: Do not use "AccessAnalyzer" in var name inside accessanalyzer package
    paths:
      include:
      - internal/service/accessanalyzer
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AccessAnalyzer"
    severity: WARNING
  - id: account-in-func-name
    languages:
      - go
    message: Do not use "Account" in func name inside account package
    paths:
      include:
        - internal/service/account
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Account"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: account-in-test-name
    languages:
      - go
    message: Include "Account" in test name
    paths:
      include:
        - internal/service/account/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAccount"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: account-in-const-name
    languages:
      - go
    message: Do not use "Account" in const name inside account package
    paths:
      include:
        - internal/service/account
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Account"
    severity: WARNING
  - id: account-in-var-name
    languages:
      - go
    message: Do not use "Account" in var name inside account package
    paths:
      include:
      - internal/service/account
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Account"
    severity: WARNING
  - id: acm-in-func-name
    languages:
      - go
    message: Do not use "ACM" in func name inside acm package
    paths:
      include:
        - internal/service/acm
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ACM"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: acm-in-test-name
    languages:
      - go
    message: Include "ACM" in test name
    paths:
      include:
        - internal/service/acm/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccACM"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: acm-in-const-name
    languages:
      - go
    message: Do not use "ACM" in const name inside acm package
    paths:
      include:
        - internal/service/acm
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ACM"
    severity: WARNING
  - id: acm-in-var-name
    languages:
      - go
    message: Do not use "ACM" in var name inside acm package
    paths:
      include:
      - internal/service/acm
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ACM"
    severity: WARNING
  - id: acmpca-in-func-name
    languages:
      - go
    message: Do not use "ACMPCA" in func name inside acmpca package
    paths:
      include:
        - internal/service/acmpca
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ACMPCA"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: acmpca-in-test-name
    languages:
      - go
    message: Include "ACMPCA" in test name
    paths:
      include:
        - internal/service/acmpca/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccACMPCA"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: acmpca-in-const-name
    languages:
      - go
    message: Do not use "ACMPCA" in const name inside acmpca package
    paths:
      include:
        - internal/service/acmpca
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ACMPCA"
    severity: WARNING
  - id: acmpca-in-var-name
    languages:
      - go
    message: Do not use "ACMPCA" in var name inside acmpca package
    paths:
      include:
      - internal/service/acmpca
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ACMPCA"
    severity: WARNING
  - id: prometheusservice-in-func-name
    languages:
      - go
    message: Do not use "prometheusservice" in func name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheusservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: prometheusservice-in-const-name
    languages:
      - go
    message: Do not use "prometheusservice" in const name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheusservice"
    severity: WARNING
  - id: prometheusservice-in-var-name
    languages:
      - go
    message: Do not use "prometheusservice" in var name inside amp package
    paths:
      include:
      - internal/service/amp
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheusservice"
    severity: WARNING
  - id: prometheus-in-func-name
    languages:
      - go
    message: Do not use "prometheus" in func name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheus"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: prometheus-in-const-name
    languages:
      - go
    message: Do not use "prometheus" in const name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheus"
    severity: WARNING
  - id: prometheus-in-var-name
    languages:
      - go
    message: Do not use "prometheus" in var name inside amp package
    paths:
      include:
      - internal/service/amp
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheus"
    severity: WARNING
  - id: amp-in-func-name
    languages:
      - go
    message: Do not use "AMP" in func name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AMP"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: amp-in-test-name
    languages:
      - go
    message: Include "AMP" in test name
    paths:
      include:
        - internal/service/amp/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAMP"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: amp-in-const-name
    languages:
      - go
    message: Do not use "AMP" in const name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AMP"
    severity: WARNING
  - id: amp-in-var-name
    languages:
      - go
    message: Do not use "AMP" in var name inside amp package
    paths:
      include:
      - internal/service/amp
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AMP"
    severity: WARNING
  - id: amplify-in-func-name
    languages:
      - go
    message: Do not use "Amplify" in func name inside amplify package
    paths:
      include:
        - internal/service/amplify
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Amplify"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: amplify-in-test-name
    languages:
      - go
    message: Include "Amplify" in test name
    paths:
      include:
        - internal/service/amplify/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAmplify"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: amplify-in-const-name
    languages:
      - go
    message: Do not use "Amplify" in const name inside amplify package
    paths:
      include:
        - internal/service/amplify
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Amplify"
    severity: WARNING
  - id: amplify-in-var-name
    languages:
      - go
    message: Do not use "Amplify" in var name inside amplify package
    paths:
      include:
      - internal/service/amplify
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Amplify"
    severity: WARNING
  - id: apigateway-in-func-name
    languages:
      - go
    message: Do not use "APIGateway" in func name inside apigateway package
    paths:
      include:
        - internal/service/apigateway
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)APIGateway"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: apigateway-in-test-name
    languages:
      - go
    message: Include "APIGateway" in test name
    paths:
      include:
        - internal/service/apigateway/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAPIGateway"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: apigateway-in-const-name
    languages:
      - go
    message: Do not use "APIGateway" in const name inside apigateway package
    paths:
      include:
        - internal/service/apigateway
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)APIGateway"
    severity: WARNING
  - id: apigateway-in-var-name
    languages:
      - go
    message: Do not use "APIGateway" in var name inside apigateway package
    paths:
      include:
      - internal/service/apigateway
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)APIGateway"
    severity: WARNING
  - id: apigatewayv2-in-func-name
    languages:
      - go
    message: Do not use "APIGatewayV2" in func name inside apigatewayv2 package
    paths:
      include:
        - internal/service/apigatewayv2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)APIGatewayV2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: apigatewayv2-in-test-name
    languages:
      - go
    message: Include "APIGatewayV2" in test name
    paths:
      include:
        - internal/service/apigatewayv2/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAPIGatewayV2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: apigatewayv2-in-const-name
    languages:
      - go
    message: Do not use "APIGatewayV2" in const name inside apigatewayv2 package
    paths:
      include:
        - internal/service/apigatewayv2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)APIGatewayV2"
    severity: WARNING
  - id: apigatewayv2-in-var-name
    languages:
      - go
    message: Do not use "APIGatewayV2" in var name inside apigatewayv2 package
    paths:
      include:
      - internal/service/apigatewayv2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)APIGatewayV2"
    severity: WARNING
  - id: applicationautoscaling-in-func-name
    languages:
      - go
    message: Do not use "applicationautoscaling" in func name inside appautoscaling package
    paths:
      include:
        - internal/service/appautoscaling
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)applicationautoscaling"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: applicationautoscaling-in-const-name
    languages:
      - go
    message: Do not use "applicationautoscaling" in const name inside appautoscaling package
    paths:
      include:
        - internal/service/appautoscaling
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)applicationautoscaling"
    severity: WARNING
  - id: applicationautoscaling-in-var-name
    languages:
      - go
    message: Do not use "applicationautoscaling" in var name inside appautoscaling package
    paths:
      include:
      - internal/service/appautoscaling
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)applicationautoscaling"
    severity: WARNING
  - id: appautoscaling-in-func-name
    languages:
      - go
    message: Do not use "AppAutoScaling" in func name inside appautoscaling package
    paths:
      include:
        - internal/service/appautoscaling
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppAutoScaling"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: appautoscaling-in-test-name
    languages:
      - go
    message: Include "AppAutoScaling" in test name
    paths:
      include:
        - internal/service/appautoscaling/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAppAutoScaling"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: appautoscaling-in-const-name
    languages:
      - go
    message: Do not use "AppAutoScaling" in const name inside appautoscaling package
    paths:
      include:
        - internal/service/appautoscaling
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppAutoScaling"
    severity: WARNING
  - id: appautoscaling-in-var-name
    languages:
      - go
    message: Do not use "AppAutoScaling" in var name inside appautoscaling package
    paths:
      include:
      - internal/service/appautoscaling
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppAutoScaling"
    severity: WARNING
  - id: appconfig-in-func-name
    languages:
      - go
    message: Do not use "AppConfig" in func name inside appconfig package
    paths:
      include:
        - internal/service/appconfig
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppConfig"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: appconfig-in-test-name
    languages:
      - go
    message: Include "AppConfig" in test name
    paths:
      include:
        - internal/service/appconfig/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAppConfig"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: appconfig-in-const-name
    languages:
      - go
    message: Do not use "AppConfig" in const name inside appconfig package
    paths:
      include:
        - internal/service/appconfig
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppConfig"
    severity: WARNING
  - id: appconfig-in-var-name
    languages:
      - go
    message: Do not use "AppConfig" in var name inside appconfig package
    paths:
      include:
      - internal/service/appconfig
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppConfig"
    severity: WARNING
  - id: appflow-in-func-name
    languages:
      - go
    message: Do not use "AppFlow" in func name inside appflow package
    paths:
      include:
        - internal/service/appflow
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppFlow"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: appflow-in-test-name
    languages:
      - go
    message: Include "AppFlow" in test name
    paths:
      include:
        - internal/service/appflow/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAppFlow"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: appflow-in-const-name
    languages:
      - go
    message: Do not use "AppFlow" in const name inside appflow package
    paths:
      include:
        - internal/service/appflow
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppFlow"
    severity: WARNING
  - id: appflow-in-var-name
    languages:
      - go
    message: Do not use "AppFlow" in var name inside appflow package
    paths:
      include:
      - internal/service/appflow
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppFlow"
    severity: WARNING
  - id: appintegrationsservice-in-func-name
    languages:
      - go
    message: Do not use "appintegrationsservice" in func name inside appintegrations package
    paths:
      include:
        - internal/service/appintegrations
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)appintegrationsservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: appintegrationsservice-in-const-name
    languages:
      - go
    message: Do not use "appintegrationsservice" in const name inside appintegrations package
    paths:
      include:
        - internal/service/appintegrations
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)appintegrationsservice"
    severity: WARNING
  - id: appintegrationsservice-in-var-name
    languages:
      - go
    message: Do not use "appintegrationsservice" in var name inside appintegrations package
    paths:
      include:
      - internal/service/appintegrations
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)appintegrationsservice"
    severity: WARNING
  - id: appintegrations-in-func-name
    languages:
      - go
    message: Do not use "AppIntegrations" in func name inside appintegrations package
    paths:
      include:
        - internal/service/appintegrations
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppIntegrations"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: appintegrations-in-test-name
    languages:
      - go
    message: Include "AppIntegrations" in test name
    paths:
      include:
        - internal/service/appintegrations/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAppIntegrations"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: appintegrations-in-const-name
    languages:
      - go
    message: Do not use "AppIntegrations" in const name inside appintegrations package
    paths:
      include:
        - internal/service/appintegrations
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppIntegrations"
    severity: WARNING
  - id: appintegrations-in-var-name
    languages:
      - go
    message: Do not use "AppIntegrations" in var name inside appintegrations package
    paths:
      include:
      - internal/service/appintegrations
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppIntegrations"
    severity: WARNING
  - id: appmesh-in-func-name
    languages:
      - go
    message: Do not use "AppMesh" in func name inside appmesh package
    paths:
      include:
        - internal/service/appmesh
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppMesh"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: appmesh-in-test-name
    languages:
      - go
    message: Include "AppMesh" in test name
    paths:
      include:
        - internal/service/appmesh/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAppMesh"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: appmesh-in-const-name
    languages:
      - go
    message: Do not use "AppMesh" in const name inside appmesh package
    paths:
      include:
        - internal/service/appmesh
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppMesh"
    severity: WARNING
  - id: appmesh-in-var-name
    languages:
      - go
    message: Do not use "AppMesh" in var name inside appmesh package
    paths:
      include:
      - internal/service/appmesh
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppMesh"
    severity: WARNING
  - id: apprunner-in-func-name
    languages:
      - go
    message: Do not use "AppRunner" in func name inside apprunner package
    paths:
      include:
        - internal/service/apprunner
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppRunner"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: apprunner-in-test-name
    languages:
      - go
    message: Include "AppRunner" in test name
    paths:
      include:
        - internal/service/apprunner/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAppRunner"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: apprunner-in-const-name
    languages:
      - go
    message: Do not use "AppRunner" in const name inside apprunner package
    paths:
      include:
        - internal/service/apprunner
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppRunner"
    severity: WARNING
  - id: apprunner-in-var-name
    languages:
      - go
    message: Do not use "AppRunner" in var name inside apprunner package
    paths:
      include:
      - internal/service/apprunner
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppRunner"
    severity: WARNING
  - id: appstream-in-func-name
    languages:
      - go
    message: Do not use "AppStream" in func name inside appstream package
    paths:
      include:
        - internal/service/appstream
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppStream"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: appstream-in-test-name
    languages:
      - go
    message: Include "AppStream" in test name
    paths:
      include:
        - internal/service/appstream/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAppStream"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: appstream-in-const-name
    languages:
      - go
    message: Do not use "AppStream" in const name inside appstream package
    paths:
      include:
        - internal/service/appstream
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppStream"
    severity: WARNING
  - id: appstream-in-var-name
    languages:
      - go
    message: Do not use "AppStream" in var name inside appstream package
    paths:
      include:
      - internal/service/appstream
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppStream"
    severity: WARNING
  - id: appsync-in-func-name
    languages:
      - go
    message: Do not use "AppSync" in func name inside appsync package
    paths:
      include:
        - internal/service/appsync
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppSync"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: appsync-in-test-name
    languages:
      - go
    message: Include "AppSync" in test name
    paths:
      include:
        - internal/service/appsync/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAppSync"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: appsync-in-const-name
    languages:
      - go
    message: Do not use "AppSync" in const name inside appsync package
    paths:
      include:
        - internal/service/appsync
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppSync"
    severity: WARNING
  - id: appsync-in-var-name
    languages:
      - go
    message: Do not use "AppSync" in var name inside appsync package
    paths:
      include:
      - internal/service/appsync
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AppSync"
    severity: WARNING
  - id: athena-in-func-name
    languages:
      - go
    message: Do not use "Athena" in func name inside athena package
    paths:
      include:
        - internal/service/athena
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Athena"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: athena-in-test-name
    languages:
      - go
    message: Include "Athena" in test name
    paths:
      include:
        - internal/service/athena/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAthena"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: athena-in-const-name
    languages:
      - go
    message: Do not use "Athena" in const name inside athena package
    paths:
      include:
        - internal/service/athena
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Athena"
    severity: WARNING
  - id: athena-in-var-name
    languages:
      - go
    message: Do not use "Athena" in var name inside athena package
    paths:
      include:
      - internal/service/athena
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Athena"
    severity: WARNING
  - id: autoscaling-in-func-name
    languages:
      - go
    message: Do not use "AutoScaling" in func name inside autoscaling package
    paths:
      include:
        - internal/service/autoscaling
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AutoScaling"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: autoscaling-in-test-name
    languages:
      - go
    message: Include "AutoScaling" in test name
    paths:
      include:
        - internal/service/autoscaling/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAutoScaling"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: autoscaling-in-const-name
    languages:
      - go
    message: Do not use "AutoScaling" in const name inside autoscaling package
    paths:
      include:
        - internal/service/autoscaling
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AutoScaling"
    severity: WARNING
  - id: autoscaling-in-var-name
    languages:
      - go
    message: Do not use "AutoScaling" in var name inside autoscaling package
    paths:
      include:
      - internal/service/autoscaling
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AutoScaling"
    severity: WARNING
  - id: autoscalingplans-in-func-name
    languages:
      - go
    message: Do not use "AutoScalingPlans" in func name inside autoscalingplans package
    paths:
      include:
        - internal/service/autoscalingplans
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AutoScalingPlans"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: autoscalingplans-in-test-name
    languages:
      - go
    message: Include "AutoScalingPlans" in test name
    paths:
      include:
        - internal/service/autoscalingplans/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccAutoScalingPlans"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: autoscalingplans-in-const-name
    languages:
      - go
    message: Do not use "AutoScalingPlans" in const name inside autoscalingplans package
    paths:
      include:
        - internal/service/autoscalingplans
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AutoScalingPlans"
    severity: WARNING
  - id: autoscalingplans-in-var-name
    languages:
      - go
    message: Do not use "AutoScalingPlans" in var name inside autoscalingplans package
    paths:
      include:
      - internal/service/autoscalingplans
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AutoScalingPlans"
    severity: WARNING
  - id: backup-in-func-name
    languages:
      - go
    message: Do not use "Backup" in func name inside backup package
    paths:
      include:
        - internal/service/backup
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Backup"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: backup-in-test-name
    languages:
      - go
    message: Include "Backup" in test name
    paths:
      include:
        - internal/service/backup/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccBackup"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: backup-in-const-name
    languages:
      - go
    message: Do not use "Backup" in const name inside backup package
    paths:
      include:
        - internal/service/backup
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Backup"
    severity: WARNING
  - id: backup-in-var-name
    languages:
      - go
    message: Do not use "Backup" in var name inside backup package
    paths:
      include:
      - internal/service/backup
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Backup"
    severity: WARNING
  - id: batch-in-func-name
    languages:
      - go
    message: Do not use "Batch" in func name inside batch package
    paths:
      include:
        - internal/service/batch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Batch"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: batch-in-test-name
    languages:
      - go
    message: Include "Batch" in test name
    paths:
      include:
        - internal/service/batch/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccBatch"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: batch-in-const-name
    languages:
      - go
    message: Do not use "Batch" in const name inside batch package
    paths:
      include:
        - internal/service/batch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Batch"
    severity: WARNING
  - id: batch-in-var-name
    languages:
      - go
    message: Do not use "Batch" in var name inside batch package
    paths:
      include:
      - internal/service/batch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Batch"
    severity: WARNING
  - id: budgets-in-func-name
    languages:
      - go
    message: Do not use "Budgets" in func name inside budgets package
    paths:
      include:
        - internal/service/budgets
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Budgets"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: budgets-in-test-name
    languages:
      - go
    message: Include "Budgets" in test name
    paths:
      include:
        - internal/service/budgets/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccBudgets"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: budgets-in-const-name
    languages:
      - go
    message: Do not use "Budgets" in const name inside budgets package
    paths:
      include:
        - internal/service/budgets
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Budgets"
    severity: WARNING
  - id: budgets-in-var-name
    languages:
      - go
    message: Do not use "Budgets" in var name inside budgets package
    paths:
      include:
      - internal/service/budgets
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Budgets"
    severity: WARNING
  - id: costexplorer-in-func-name
    languages:
      - go
    message: Do not use "costexplorer" in func name inside ce package
    paths:
      include:
        - internal/service/ce
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)costexplorer"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: costexplorer-in-const-name
    languages:
      - go
    message: Do not use "costexplorer" in const name inside ce package
    paths:
      include:
        - internal/service/ce
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)costexplorer"
    severity: WARNING
  - id: costexplorer-in-var-name
    languages:
      - go
    message: Do not use "costexplorer" in var name inside ce package
    paths:
      include:
      - internal/service/ce
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)costexplorer"
    severity: WARNING
  - id: ce-in-func-name
    languages:
      - go
    message: Do not use "CE" in func name inside ce package
    paths:
      include:
        - internal/service/ce
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CE"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ce-in-test-name
    languages:
      - go
    message: Include "CE" in test name
    paths:
      include:
        - internal/service/ce/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCE"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ce-in-const-name
    languages:
      - go
    message: Do not use "CE" in const name inside ce package
    paths:
      include:
        - internal/service/ce
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CE"
    severity: WARNING
  - id: ce-in-var-name
    languages:
      - go
    message: Do not use "CE" in var name inside ce package
    paths:
      include:
      - internal/service/ce
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CE"
    severity: WARNING
  - id: chime-in-func-name
    languages:
      - go
    message: Do not use "Chime" in func name inside chime package
    paths:
      include:
        - internal/service/chime
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Chime"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: chime-in-test-name
    languages:
      - go
    message: Include "Chime" in test name
    paths:
      include:
        - internal/service/chime/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccChime"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: chime-in-const-name
    languages:
      - go
    message: Do not use "Chime" in const name inside chime package
    paths:
      include:
        - internal/service/chime
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Chime"
    severity: WARNING
  - id: chime-in-var-name
    languages:
      - go
    message: Do not use "Chime" in var name inside chime package
    paths:
      include:
      - internal/service/chime
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Chime"
    severity: WARNING
  - id: cloud9-in-func-name
    languages:
      - go
    message: Do not use "Cloud9" in func name inside cloud9 package
    paths:
      include:
        - internal/service/cloud9
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Cloud9"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloud9-in-test-name
    languages:
      - go
    message: Include "Cloud9" in test name
    paths:
      include:
        - internal/service/cloud9/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCloud9"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cloud9-in-const-name
    languages:
      - go
    message: Do not use "Cloud9" in const name inside cloud9 package
    paths:
      include:
        - internal/service/cloud9
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Cloud9"
    severity: WARNING
  - id: cloud9-in-var-name
    languages:
      - go
    message: Do not use "Cloud9" in var name inside cloud9 package
    paths:
      include:
      - internal/service/cloud9
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Cloud9"
    severity: WARNING
  - id: cloudcontrolapi-in-func-name
    languages:
      - go
    message: Do not use "cloudcontrolapi" in func name inside cloudcontrol package
    paths:
      include:
        - internal/service/cloudcontrol
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudcontrolapi"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudcontrolapi-in-const-name
    languages:
      - go
    message: Do not use "cloudcontrolapi" in const name inside cloudcontrol package
    paths:
      include:
        - internal/service/cloudcontrol
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudcontrolapi"
    severity: WARNING
  - id: cloudcontrolapi-in-var-name
    languages:
      - go
    message: Do not use "cloudcontrolapi" in var name inside cloudcontrol package
    paths:
      include:
      - internal/service/cloudcontrol
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudcontrolapi"
    severity: WARNING
  - id: cloudcontrol-in-func-name
    languages:
      - go
    message: Do not use "CloudControl" in func name inside cloudcontrol package
    paths:
      include:
        - internal/service/cloudcontrol
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudControl"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudcontrol-in-test-name
    languages:
      - go
    message: Include "CloudControl" in test name
    paths:
      include:
        - internal/service/cloudcontrol/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCloudControl"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudcontrol-in-const-name
    languages:
      - go
    message: Do not use "CloudControl" in const name inside cloudcontrol package
    paths:
      include:
        - internal/service/cloudcontrol
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudControl"
    severity: WARNING
  - id: cloudcontrol-in-var-name
    languages:
      - go
    message: Do not use "CloudControl" in var name inside cloudcontrol package
    paths:
      include:
      - internal/service/cloudcontrol
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudControl"
    severity: WARNING
  - id: cloudformation-in-func-name
    languages:
      - go
    message: Do not use "CloudFormation" in func name inside cloudformation package
    paths:
      include:
        - internal/service/cloudformation
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudFormation"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudformation-in-test-name
    languages:
      - go
    message: Include "CloudFormation" in test name
    paths:
      include:
        - internal/service/cloudformation/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCloudFormation"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudformation-in-const-name
    languages:
      - go
    message: Do not use "CloudFormation" in const name inside cloudformation package
    paths:
      include:
        - internal/service/cloudformation
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudFormation"
    severity: WARNING
  - id: cloudformation-in-var-name
    languages:
      - go
    message: Do not use "CloudFormation" in var name inside cloudformation package
    paths:
      include:
      - internal/service/cloudformation
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudFormation"
    severity: WARNING
  - id: cloudfront-in-func-name
    languages:
      - go
    message: Do not use "CloudFront" in func name inside cloudfront package
    paths:
      include:
        - internal/service/cloudfront
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudFront"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudfront-in-test-name
    languages:
      - go
    message: Include "CloudFront" in test name
    paths:
      include:
        - internal/service/cloudfront/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCloudFront"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudfront-in-const-name
    languages:
      - go
    message: Do not use "CloudFront" in const name inside cloudfront package
    paths:
      include:
        - internal/service/cloudfront
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudFront"
    severity: WARNING
  - id: cloudfront-in-var-name
    languages:
      - go
    message: Do not use "CloudFront" in var name inside cloudfront package
    paths:
      include:
      - internal/service/cloudfront
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudFront"
    severity: WARNING
  - id: cloudhsmv2-in-func-name
    languages:
      - go
    message: Do not use "CloudHSMV2" in func name inside cloudhsmv2 package
    paths:
      include:
        - internal/service/cloudhsmv2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudHSMV2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudhsmv2-in-test-name
    languages:
      - go
    message: Include "CloudHSMV2" in test name
    paths:
      include:
        - internal/service/cloudhsmv2/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCloudHSMV2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudhsmv2-in-const-name
    languages:
      - go
    message: Do not use "CloudHSMV2" in const name inside cloudhsmv2 package
    paths:
      include:
        - internal/service/cloudhsmv2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudHSMV2"
    severity: WARNING
  - id: cloudhsmv2-in-var-name
    languages:
      - go
    message: Do not use "CloudHSMV2" in var name inside cloudhsmv2 package
    paths:
      include:
      - internal/service/cloudhsmv2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudHSMV2"
    severity: WARNING
  - id: cloudhsm-in-func-name
    languages:
      - go
    message: Do not use "cloudhsm" in func name inside cloudhsmv2 package
    paths:
      include:
        - internal/service/cloudhsmv2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudhsm"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudhsm-in-const-name
    languages:
      - go
    message: Do not use "cloudhsm" in const name inside cloudhsmv2 package
    paths:
      include:
        - internal/service/cloudhsmv2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudhsm"
    severity: WARNING
  - id: cloudhsm-in-var-name
    languages:
      - go
    message: Do not use "cloudhsm" in var name inside cloudhsmv2 package
    paths:
      include:
      - internal/service/cloudhsmv2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudhsm"
    severity: WARNING
  - id: cloudsearch-in-func-name
    languages:
      - go
    message: Do not use "CloudSearch" in func name inside cloudsearch package
    paths:
      include:
        - internal/service/cloudsearch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudSearch"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudsearch-in-test-name
    languages:
      - go
    message: Include "CloudSearch" in test name
    paths:
      include:
        - internal/service/cloudsearch/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCloudSearch"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudsearch-in-const-name
    languages:
      - go
    message: Do not use "CloudSearch" in const name inside cloudsearch package
    paths:
      include:
        - internal/service/cloudsearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudSearch"
    severity: WARNING
  - id: cloudsearch-in-var-name
    languages:
      - go
    message: Do not use "CloudSearch" in var name inside cloudsearch package
    paths:
      include:
      - internal/service/cloudsearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudSearch"
    severity: WARNING
  - id: cloudtrail-in-func-name
    languages:
      - go
    message: Do not use "CloudTrail" in func name inside cloudtrail package
    paths:
      include:
        - internal/service/cloudtrail
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudTrail"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudtrail-in-test-name
    languages:
      - go
    message: Include "CloudTrail" in test name
    paths:
      include:
        - internal/service/cloudtrail/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCloudTrail"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudtrail-in-const-name
    languages:
      - go
    message: Do not use "CloudTrail" in const name inside cloudtrail package
    paths:
      include:
        - internal/service/cloudtrail
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudTrail"
    severity: WARNING
  - id: cloudtrail-in-var-name
    languages:
      - go
    message: Do not use "CloudTrail" in var name inside cloudtrail package
    paths:
      include:
      - internal/service/cloudtrail
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudTrail"
    severity: WARNING
  - id: cloudwatch-in-func-name
    languages:
      - go
    message: Do not use "CloudWatch" in func name inside cloudwatch package
    paths:
      include:
        - internal/service/cloudwatch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudWatch"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudwatch-in-test-name
    languages:
      - go
    message: Include "CloudWatch" in test name
    paths:
      include:
        - internal/service/cloudwatch/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCloudWatch"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudwatch-in-const-name
    languages:
      - go
    message: Do not use "CloudWatch" in const name inside cloudwatch package
    paths:
      include:
        - internal/service/cloudwatch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudWatch"
    severity: WARNING
  - id: cloudwatch-in-var-name
    languages:
      - go
    message: Do not use "CloudWatch" in var name inside cloudwatch package
    paths:
      include:
      - internal/service/cloudwatch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CloudWatch"
    severity: WARNING
  - id: codeartifact-in-func-name
    languages:
      - go
    message: Do not use "CodeArtifact" in func name inside codeartifact package
    paths:
      include:
        - internal/service/codeartifact
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeArtifact"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: codeartifact-in-test-name
    languages:
      - go
    message: Include "CodeArtifact" in test name
    paths:
      include:
        - internal/service/codeartifact/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCodeArtifact"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: codeartifact-in-const-name
    languages:
      - go
    message: Do not use "CodeArtifact" in const name inside codeartifact package
    paths:
      include:
        - internal/service/codeartifact
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeArtifact"
    severity: WARNING
  - id: codeartifact-in-var-name
    languages:
      - go
    message: Do not use "CodeArtifact" in var name inside codeartifact package
    paths:
      include:
      - internal/service/codeartifact
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeArtifact"
    severity: WARNING
  - id: codebuild-in-func-name
    languages:
      - go
    message: Do not use "CodeBuild" in func name inside codebuild package
    paths:
      include:
        - internal/service/codebuild
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeBuild"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: codebuild-in-test-name
    languages:
      - go
    message: Include "CodeBuild" in test name
    paths:
      include:
        - internal/service/codebuild/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCodeBuild"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: codebuild-in-const-name
    languages:
      - go
    message: Do not use "CodeBuild" in const name inside codebuild package
    paths:
      include:
        - internal/service/codebuild
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeBuild"
    severity: WARNING
  - id: codebuild-in-var-name
    languages:
      - go
    message: Do not use "CodeBuild" in var name inside codebuild package
    paths:
      include:
      - internal/service/codebuild
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeBuild"
    severity: WARNING
  - id: codecommit-in-func-name
    languages:
      - go
    message: Do not use "CodeCommit" in func name inside codecommit package
    paths:
      include:
        - internal/service/codecommit
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeCommit"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: codecommit-in-test-name
    languages:
      - go
    message: Include "CodeCommit" in test name
    paths:
      include:
        - internal/service/codecommit/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCodeCommit"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: codecommit-in-const-name
    languages:
      - go
    message: Do not use "CodeCommit" in const name inside codecommit package
    paths:
      include:
        - internal/service/codecommit
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeCommit"
    severity: WARNING
  - id: codecommit-in-var-name
    languages:
      - go
    message: Do not use "CodeCommit" in var name inside codecommit package
    paths:
      include:
      - internal/service/codecommit
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeCommit"
    severity: WARNING
  - id: codepipeline-in-func-name
    languages:
      - go
    message: Do not use "CodePipeline" in func name inside codepipeline package
    paths:
      include:
        - internal/service/codepipeline
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodePipeline"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: codepipeline-in-test-name
    languages:
      - go
    message: Include "CodePipeline" in test name
    paths:
      include:
        - internal/service/codepipeline/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCodePipeline"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: codepipeline-in-const-name
    languages:
      - go
    message: Do not use "CodePipeline" in const name inside codepipeline package
    paths:
      include:
        - internal/service/codepipeline
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodePipeline"
    severity: WARNING
  - id: codepipeline-in-var-name
    languages:
      - go
    message: Do not use "CodePipeline" in var name inside codepipeline package
    paths:
      include:
      - internal/service/codepipeline
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodePipeline"
    severity: WARNING
  - id: codestarconnections-in-func-name
    languages:
      - go
    message: Do not use "CodeStarConnections" in func name inside codestarconnections package
    paths:
      include:
        - internal/service/codestarconnections
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeStarConnections"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: codestarconnections-in-test-name
    languages:
      - go
    message: Include "CodeStarConnections" in test name
    paths:
      include:
        - internal/service/codestarconnections/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCodeStarConnections"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: codestarconnections-in-const-name
    languages:
      - go
    message: Do not use "CodeStarConnections" in const name inside codestarconnections package
    paths:
      include:
        - internal/service/codestarconnections
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeStarConnections"
    severity: WARNING
  - id: codestarconnections-in-var-name
    languages:
      - go
    message: Do not use "CodeStarConnections" in var name inside codestarconnections package
    paths:
      include:
      - internal/service/codestarconnections
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeStarConnections"
    severity: WARNING
  - id: codestarnotifications-in-func-name
    languages:
      - go
    message: Do not use "CodeStarNotifications" in func name inside codestarnotifications package
    paths:
      include:
        - internal/service/codestarnotifications
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeStarNotifications"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: codestarnotifications-in-test-name
    languages:
      - go
    message: Include "CodeStarNotifications" in test name
    paths:
      include:
        - internal/service/codestarnotifications/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCodeStarNotifications"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: codestarnotifications-in-const-name
    languages:
      - go
    message: Do not use "CodeStarNotifications" in const name inside codestarnotifications package
    paths:
      include:
        - internal/service/codestarnotifications
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeStarNotifications"
    severity: WARNING
  - id: codestarnotifications-in-var-name
    languages:
      - go
    message: Do not use "CodeStarNotifications" in var name inside codestarnotifications package
    paths:
      include:
      - internal/service/codestarnotifications
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CodeStarNotifications"
    severity: WARNING
  - id: cognitoidentity-in-func-name
    languages:
      - go
    message: Do not use "CognitoIdentity" in func name inside cognitoidentity package
    paths:
      include:
        - internal/service/cognitoidentity
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CognitoIdentity"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cognitoidentity-in-test-name
    languages:
      - go
    message: Include "CognitoIdentity" in test name
    paths:
      include:
        - internal/service/cognitoidentity/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCognitoIdentity"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cognitoidentity-in-const-name
    languages:
      - go
    message: Do not use "CognitoIdentity" in const name inside cognitoidentity package
    paths:
      include:
        - internal/service/cognitoidentity
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CognitoIdentity"
    severity: WARNING
  - id: cognitoidentity-in-var-name
    languages:
      - go
    message: Do not use "CognitoIdentity" in var name inside cognitoidentity package
    paths:
      include:
      - internal/service/cognitoidentity
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CognitoIdentity"
    severity: WARNING
  - id: cognitoidentityprovider-in-func-name
    languages:
      - go
    message: Do not use "cognitoidentityprovider" in func name inside cognitoidp package
    paths:
      include:
        - internal/service/cognitoidp
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cognitoidentityprovider"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cognitoidentityprovider-in-const-name
    languages:
      - go
    message: Do not use "cognitoidentityprovider" in const name inside cognitoidp package
    paths:
      include:
        - internal/service/cognitoidp
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cognitoidentityprovider"
    severity: WARNING
  - id: cognitoidentityprovider-in-var-name
    languages:
      - go
    message: Do not use "cognitoidentityprovider" in var name inside cognitoidp package
    paths:
      include:
      - internal/service/cognitoidp
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cognitoidentityprovider"
    severity: WARNING
  - id: cognitoidp-in-func-name
    languages:
      - go
    message: Do not use "CognitoIDP" in func name inside cognitoidp package
    paths:
      include:
        - internal/service/cognitoidp
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CognitoIDP"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cognitoidp-in-test-name
    languages:
      - go
    message: Include "CognitoIDP" in test name
    paths:
      include:
        - internal/service/cognitoidp/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCognitoIDP"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cognitoidp-in-const-name
    languages:
      - go
    message: Do not use "CognitoIDP" in const name inside cognitoidp package
    paths:
      include:
        - internal/service/cognitoidp
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CognitoIDP"
    severity: WARNING
  - id: cognitoidp-in-var-name
    languages:
      - go
    message: Do not use "CognitoIDP" in var name inside cognitoidp package
    paths:
      include:
      - internal/service/cognitoidp
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CognitoIDP"
    severity: WARNING
  - id: configservice-in-func-name
    languages:
      - go
    message: Do not use "ConfigService" in func name inside configservice package
    paths:
      include:
        - internal/service/configservice
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ConfigService"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: configservice-in-test-name
    languages:
      - go
    message: Include "ConfigService" in test name
    paths:
      include:
        - internal/service/configservice/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccConfigService"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: configservice-in-const-name
    languages:
      - go
    message: Do not use "ConfigService" in const name inside configservice package
    paths:
      include:
        - internal/service/configservice
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ConfigService"
    severity: WARNING
  - id: configservice-in-var-name
    languages:
      - go
    message: Do not use "ConfigService" in var name inside configservice package
    paths:
      include:
      - internal/service/configservice
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ConfigService"
    severity: WARNING
  - id: config-in-func-name
    languages:
      - go
    message: Do not use "config" in func name inside configservice package
    paths:
      include:
        - internal/service/configservice
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)config"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: config-in-const-name
    languages:
      - go
    message: Do not use "config" in const name inside configservice package
    paths:
      include:
        - internal/service/configservice
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)config"
    severity: WARNING
  - id: config-in-var-name
    languages:
      - go
    message: Do not use "config" in var name inside configservice package
    paths:
      include:
      - internal/service/configservice
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)config"
    severity: WARNING
  - id: connect-in-func-name
    languages:
      - go
    message: Do not use "Connect" in func name inside connect package
    paths:
      include:
        - internal/service/connect
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Connect"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: connect-in-test-name
    languages:
      - go
    message: Include "Connect" in test name
    paths:
      include:
        - internal/service/connect/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccConnect"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: connect-in-const-name
    languages:
      - go
    message: Do not use "Connect" in const name inside connect package
    paths:
      include:
        - internal/service/connect
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Connect"
    severity: WARNING
  - id: connect-in-var-name
    languages:
      - go
    message: Do not use "Connect" in var name inside connect package
    paths:
      include:
      - internal/service/connect
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Connect"
    severity: WARNING
  - id: costandusagereportservice-in-func-name
    languages:
      - go
    message: Do not use "costandusagereportservice" in func name inside cur package
    paths:
      include:
        - internal/service/cur
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)costandusagereportservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: costandusagereportservice-in-const-name
    languages:
      - go
    message: Do not use "costandusagereportservice" in const name inside cur package
    paths:
      include:
        - internal/service/cur
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)costandusagereportservice"
    severity: WARNING
  - id: costandusagereportservice-in-var-name
    languages:
      - go
    message: Do not use "costandusagereportservice" in var name inside cur package
    paths:
      include:
      - internal/service/cur
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)costandusagereportservice"
    severity: WARNING
  - id: cur-in-func-name
    languages:
      - go
    message: Do not use "CUR" in func name inside cur package
    paths:
      include:
        - internal/service/cur
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CUR"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cur-in-test-name
    languages:
      - go
    message: Include "CUR" in test name
    paths:
      include:
        - internal/service/cur/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccCUR"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: cur-in-const-name
    languages:
      - go
    message: Do not use "CUR" in const name inside cur package
    paths:
      include:
        - internal/service/cur
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CUR"
    severity: WARNING
  - id: cur-in-var-name
    languages:
      - go
    message: Do not use "CUR" in var name inside cur package
    paths:
      include:
      - internal/service/cur
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)CUR"
    severity: WARNING
  - id: dataexchange-in-func-name
    languages:
      - go
    message: Do not use "DataExchange" in func name inside dataexchange package
    paths:
      include:
        - internal/service/dataexchange
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DataExchange"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: dataexchange-in-test-name
    languages:
      - go
    message: Include "DataExchange" in test name
    paths:
      include:
        - internal/service/dataexchange/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDataExchange"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: dataexchange-in-const-name
    languages:
      - go
    message: Do not use "DataExchange" in const name inside dataexchange package
    paths:
      include:
        - internal/service/dataexchange
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DataExchange"
    severity: WARNING
  - id: dataexchange-in-var-name
    languages:
      - go
    message: Do not use "DataExchange" in var name inside dataexchange package
    paths:
      include:
      - internal/service/dataexchange
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DataExchange"
    severity: WARNING
  - id: datapipeline-in-func-name
    languages:
      - go
    message: Do not use "DataPipeline" in func name inside datapipeline package
    paths:
      include:
        - internal/service/datapipeline
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DataPipeline"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: datapipeline-in-test-name
    languages:
      - go
    message: Include "DataPipeline" in test name
    paths:
      include:
        - internal/service/datapipeline/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDataPipeline"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: datapipeline-in-const-name
    languages:
      - go
    message: Do not use "DataPipeline" in const name inside datapipeline package
    paths:
      include:
        - internal/service/datapipeline
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DataPipeline"
    severity: WARNING
  - id: datapipeline-in-var-name
    languages:
      - go
    message: Do not use "DataPipeline" in var name inside datapipeline package
    paths:
      include:
      - internal/service/datapipeline
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DataPipeline"
    severity: WARNING
  - id: datasync-in-func-name
    languages:
      - go
    message: Do not use "DataSync" in func name inside datasync package
    paths:
      include:
        - internal/service/datasync
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DataSync"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: datasync-in-test-name
    languages:
      - go
    message: Include "DataSync" in test name
    paths:
      include:
        - internal/service/datasync/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDataSync"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: datasync-in-const-name
    languages:
      - go
    message: Do not use "DataSync" in const name inside datasync package
    paths:
      include:
        - internal/service/datasync
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DataSync"
    severity: WARNING
  - id: datasync-in-var-name
    languages:
      - go
    message: Do not use "DataSync" in var name inside datasync package
    paths:
      include:
      - internal/service/datasync
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DataSync"
    severity: WARNING
  - id: dax-in-func-name
    languages:
      - go
    message: Do not use "DAX" in func name inside dax package
    paths:
      include:
        - internal/service/dax
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DAX"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: dax-in-test-name
    languages:
      - go
    message: Include "DAX" in test name
    paths:
      include:
        - internal/service/dax/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDAX"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: dax-in-const-name
    languages:
      - go
    message: Do not use "DAX" in const name inside dax package
    paths:
      include:
        - internal/service/dax
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DAX"
    severity: WARNING
  - id: dax-in-var-name
    languages:
      - go
    message: Do not use "DAX" in var name inside dax package
    paths:
      include:
      - internal/service/dax
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DAX"
    severity: WARNING
  - id: codedeploy-in-func-name
    languages:
      - go
    message: Do not use "codedeploy" in func name inside deploy package
    paths:
      include:
        - internal/service/deploy
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)codedeploy"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: codedeploy-in-const-name
    languages:
      - go
    message: Do not use "codedeploy" in const name inside deploy package
    paths:
      include:
        - internal/service/deploy
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)codedeploy"
    severity: WARNING
  - id: codedeploy-in-var-name
    languages:
      - go
    message: Do not use "codedeploy" in var name inside deploy package
    paths:
      include:
      - internal/service/deploy
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)codedeploy"
    severity: WARNING
  - id: deploy-in-func-name
    languages:
      - go
    message: Do not use "Deploy" in func name inside deploy package
    paths:
      include:
        - internal/service/deploy
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Deploy"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: deploy-in-test-name
    languages:
      - go
    message: Include "Deploy" in test name
    paths:
      include:
        - internal/service/deploy/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDeploy"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: deploy-in-const-name
    languages:
      - go
    message: Do not use "Deploy" in const name inside deploy package
    paths:
      include:
        - internal/service/deploy
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Deploy"
    severity: WARNING
  - id: deploy-in-var-name
    languages:
      - go
    message: Do not use "Deploy" in var name inside deploy package
    paths:
      include:
      - internal/service/deploy
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Deploy"
    severity: WARNING
  - id: detective-in-func-name
    languages:
      - go
    message: Do not use "Detective" in func name inside detective package
    paths:
      include:
        - internal/service/detective
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Detective"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: detective-in-test-name
    languages:
      - go
    message: Include "Detective" in test name
    paths:
      include:
        - internal/service/detective/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDetective"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: detective-in-const-name
    languages:
      - go
    message: Do not use "Detective" in const name inside detective package
    paths:
      include:
        - internal/service/detective
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Detective"
    severity: WARNING
  - id: detective-in-var-name
    languages:
      - go
    message: Do not use "Detective" in var name inside detective package
    paths:
      include:
      - internal/service/detective
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Detective"
    severity: WARNING
  - id: devicefarm-in-func-name
    languages:
      - go
    message: Do not use "DeviceFarm" in func name inside devicefarm package
    paths:
      include:
        - internal/service/devicefarm
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DeviceFarm"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: devicefarm-in-test-name
    languages:
      - go
    message: Include "DeviceFarm" in test name
    paths:
      include:
        - internal/service/devicefarm/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDeviceFarm"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: devicefarm-in-const-name
    languages:
      - go
    message: Do not use "DeviceFarm" in const name inside devicefarm package
    paths:
      include:
        - internal/service/devicefarm
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DeviceFarm"
    severity: WARNING
  - id: devicefarm-in-var-name
    languages:
      - go
    message: Do not use "DeviceFarm" in var name inside devicefarm package
    paths:
      include:
      - internal/service/devicefarm
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DeviceFarm"
    severity: WARNING
  - id: directconnect-in-func-name
    languages:
      - go
    message: Do not use "DirectConnect" in func name inside directconnect package
    paths:
      include:
        - internal/service/directconnect
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DirectConnect"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: directconnect-in-test-name
    languages:
      - go
    message: Include "DirectConnect" in test name
    paths:
      include:
        - internal/service/directconnect/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDirectConnect"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: directconnect-in-const-name
    languages:
      - go
    message: Do not use "DirectConnect" in const name inside directconnect package
    paths:
      include:
        - internal/service/directconnect
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DirectConnect"
    severity: WARNING
  - id: directconnect-in-var-name
    languages:
      - go
    message: Do not use "DirectConnect" in var name inside directconnect package
    paths:
      include:
      - internal/service/directconnect
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DirectConnect"
    severity: WARNING
  - id: dlm-in-func-name
    languages:
      - go
    message: Do not use "DLM" in func name inside dlm package
    paths:
      include:
        - internal/service/dlm
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DLM"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: dlm-in-test-name
    languages:
      - go
    message: Include "DLM" in test name
    paths:
      include:
        - internal/service/dlm/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDLM"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: dlm-in-const-name
    languages:
      - go
    message: Do not use "DLM" in const name inside dlm package
    paths:
      include:
        - internal/service/dlm
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DLM"
    severity: WARNING
  - id: dlm-in-var-name
    languages:
      - go
    message: Do not use "DLM" in var name inside dlm package
    paths:
      include:
      - internal/service/dlm
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DLM"
    severity: WARNING
  - id: databasemigrationservice-in-func-name
    languages:
      - go
    message: Do not use "databasemigrationservice" in func name inside dms package
    paths:
      include:
        - internal/service/dms
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)databasemigrationservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: databasemigrationservice-in-const-name
    languages:
      - go
    message: Do not use "databasemigrationservice" in const name inside dms package
    paths:
      include:
        - internal/service/dms
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)databasemigrationservice"
    severity: WARNING
  - id: databasemigrationservice-in-var-name
    languages:
      - go
    message: Do not use "databasemigrationservice" in var name inside dms package
    paths:
      include:
      - internal/service/dms
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)databasemigrationservice"
    severity: WARNING
  - id: databasemigration-in-func-name
    languages:
      - go
    message: Do not use "databasemigration" in func name inside dms package
    paths:
      include:
        - internal/service/dms
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)databasemigration"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: databasemigration-in-const-name
    languages:
      - go
    message: Do not use "databasemigration" in const name inside dms package
    paths:
      include:
        - internal/service/dms
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)databasemigration"
    severity: WARNING
  - id: databasemigration-in-var-name
    languages:
      - go
    message: Do not use "databasemigration" in var name inside dms package
    paths:
      include:
      - internal/service/dms
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)databasemigration"
    severity: WARNING
  - id: dms-in-func-name
    languages:
      - go
    message: Do not use "DMS" in func name inside dms package
    paths:
      include:
        - internal/service/dms
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DMS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: dms-in-test-name
    languages:
      - go
    message: Include "DMS" in test name
    paths:
      include:
        - internal/service/dms/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDMS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: dms-in-const-name
    languages:
      - go
    message: Do not use "DMS" in const name inside dms package
    paths:
      include:
        - internal/service/dms
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DMS"
    severity: WARNING
  - id: dms-in-var-name
    languages:
      - go
    message: Do not use "DMS" in var name inside dms package
    paths:
      include:
      - internal/service/dms
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DMS"
    severity: WARNING
  - id: docdb-in-func-name
    languages:
      - go
    message: Do not use "DocDB" in func name inside docdb package
    paths:
      include:
        - internal/service/docdb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DocDB"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: docdb-in-test-name
    languages:
      - go
    message: Include "DocDB" in test name
    paths:
      include:
        - internal/service/docdb/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDocDB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: docdb-in-const-name
    languages:
      - go
    message: Do not use "DocDB" in const name inside docdb package
    paths:
      include:
        - internal/service/docdb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DocDB"
    severity: WARNING
  - id: docdb-in-var-name
    languages:
      - go
    message: Do not use "DocDB" in var name inside docdb package
    paths:
      include:
      - internal/service/docdb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DocDB"
    severity: WARNING
  - id: directoryservice-in-func-name
    languages:
      - go
    message: Do not use "directoryservice" in func name inside ds package
    paths:
      include:
        - internal/service/ds
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)directoryservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: directoryservice-in-const-name
    languages:
      - go
    message: Do not use "directoryservice" in const name inside ds package
    paths:
      include:
        - internal/service/ds
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)directoryservice"
    severity: WARNING
  - id: directoryservice-in-var-name
    languages:
      - go
    message: Do not use "directoryservice" in var name inside ds package
    paths:
      include:
      - internal/service/ds
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)directoryservice"
    severity: WARNING
  - id: ds-in-func-name
    languages:
      - go
    message: Do not use "DS" in func name inside ds package
    paths:
      include:
        - internal/service/ds
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ds-in-test-name
    languages:
      - go
    message: Include "DS" in test name
    paths:
      include:
        - internal/service/ds/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ds-in-const-name
    languages:
      - go
    message: Do not use "DS" in const name inside ds package
    paths:
      include:
        - internal/service/ds
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DS"
    severity: WARNING
  - id: ds-in-var-name
    languages:
      - go
    message: Do not use "DS" in var name inside ds package
    paths:
      include:
      - internal/service/ds
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DS"
    severity: WARNING
  - id: dynamodb-in-func-name
    languages:
      - go
    message: Do not use "DynamoDB" in func name inside dynamodb package
    paths:
      include:
        - internal/service/dynamodb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DynamoDB"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: dynamodb-in-test-name
    languages:
      - go
    message: Include "DynamoDB" in test name
    paths:
      include:
        - internal/service/dynamodb/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccDynamoDB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: dynamodb-in-const-name
    languages:
      - go
    message: Do not use "DynamoDB" in const name inside dynamodb package
    paths:
      include:
        - internal/service/dynamodb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DynamoDB"
    severity: WARNING
  - id: dynamodb-in-var-name
    languages:
      - go
    message: Do not use "DynamoDB" in var name inside dynamodb package
    paths:
      include:
      - internal/service/dynamodb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)DynamoDB"
    severity: WARNING
  - id: ec2-in-func-name
    languages:
      - go
    message: Do not use "EC2" in func name inside ec2 package
    paths:
      include:
        - internal/service/ec2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EC2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ec2-in-test-name
    languages:
      - go
    message: Include "EC2" in test name
    paths:
      include:
        - internal/service/ec2/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccEC2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ec2-in-const-name
    languages:
      - go
    message: Do not use "EC2" in const name inside ec2 package
    paths:
      include:
        - internal/service/ec2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EC2"
    severity: WARNING
  - id: ec2-in-var-name
    languages:
      - go
    message: Do not use "EC2" in var name inside ec2 package
    paths:
      include:
      - internal/service/ec2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EC2"
    severity: WARNING
  - id: ecr-in-func-name
    languages:
      - go
    message: Do not use "ECR" in func name inside ecr package
    paths:
      include:
        - internal/service/ecr
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ECR"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ecr-in-test-name
    languages:
      - go
    message: Include "ECR" in test name
    paths:
      include:
        - internal/service/ecr/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccECR"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ecr-in-const-name
    languages:
      - go
    message: Do not use "ECR" in const name inside ecr package
    paths:
      include:
        - internal/service/ecr
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ECR"
    severity: WARNING
  - id: ecr-in-var-name
    languages:
      - go
    message: Do not use "ECR" in var name inside ecr package
    paths:
      include:
      - internal/service/ecr
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ECR"
    severity: WARNING
  - id: ecrpublic-in-func-name
    languages:
      - go
    message: Do not use "ECRPublic" in func name inside ecrpublic package
    paths:
      include:
        - internal/service/ecrpublic
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ECRPublic"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ecrpublic-in-test-name
    languages:
      - go
    message: Include "ECRPublic" in test name
    paths:
      include:
        - internal/service/ecrpublic/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccECRPublic"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ecrpublic-in-const-name
    languages:
      - go
    message: Do not use "ECRPublic" in const name inside ecrpublic package
    paths:
      include:
        - internal/service/ecrpublic
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ECRPublic"
    severity: WARNING
  - id: ecrpublic-in-var-name
    languages:
      - go
    message: Do not use "ECRPublic" in var name inside ecrpublic package
    paths:
      include:
      - internal/service/ecrpublic
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ECRPublic"
    severity: WARNING
  - id: ecs-in-func-name
    languages:
      - go
    message: Do not use "ECS" in func name inside ecs package
    paths:
      include:
        - internal/service/ecs
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ECS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ecs-in-test-name
    languages:
      - go
    message: Include "ECS" in test name
    paths:
      include:
        - internal/service/ecs/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccECS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ecs-in-const-name
    languages:
      - go
    message: Do not use "ECS" in const name inside ecs package
    paths:
      include:
        - internal/service/ecs
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ECS"
    severity: WARNING
  - id: ecs-in-var-name
    languages:
      - go
    message: Do not use "ECS" in var name inside ecs package
    paths:
      include:
      - internal/service/ecs
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ECS"
    severity: WARNING
  - id: efs-in-func-name
    languages:
      - go
    message: Do not use "EFS" in func name inside efs package
    paths:
      include:
        - internal/service/efs
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EFS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: efs-in-test-name
    languages:
      - go
    message: Include "EFS" in test name
    paths:
      include:
        - internal/service/efs/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccEFS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: efs-in-const-name
    languages:
      - go
    message: Do not use "EFS" in const name inside efs package
    paths:
      include:
        - internal/service/efs
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EFS"
    severity: WARNING
  - id: efs-in-var-name
    languages:
      - go
    message: Do not use "EFS" in var name inside efs package
    paths:
      include:
      - internal/service/efs
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EFS"
    severity: WARNING
  - id: eks-in-func-name
    languages:
      - go
    message: Do not use "EKS" in func name inside eks package
    paths:
      include:
        - internal/service/eks
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EKS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: eks-in-test-name
    languages:
      - go
    message: Include "EKS" in test name
    paths:
      include:
        - internal/service/eks/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccEKS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: eks-in-const-name
    languages:
      - go
    message: Do not use "EKS" in const name inside eks package
    paths:
      include:
        - internal/service/eks
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EKS"
    severity: WARNING
  - id: eks-in-var-name
    languages:
      - go
    message: Do not use "EKS" in var name inside eks package
    paths:
      include:
      - internal/service/eks
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EKS"
    severity: WARNING
  - id: elasticache-in-func-name
    languages:
      - go
    message: Do not use "ElastiCache" in func name inside elasticache package
    paths:
      include:
        - internal/service/elasticache
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ElastiCache"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: elasticache-in-test-name
    languages:
      - go
    message: Include "ElastiCache" in test name
    paths:
      include:
        - internal/service/elasticache/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccElastiCache"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: elasticache-in-const-name
    languages:
      - go
    message: Do not use "ElastiCache" in const name inside elasticache package
    paths:
      include:
        - internal/service/elasticache
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ElastiCache"
    severity: WARNING
  - id: elasticache-in-var-name
    languages:
      - go
    message: Do not use "ElastiCache" in var name inside elasticache package
    paths:
      include:
      - internal/service/elasticache
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ElastiCache"
    severity: WARNING
  - id: elasticbeanstalk-in-func-name
    languages:
      - go
    message: Do not use "ElasticBeanstalk" in func name inside elasticbeanstalk package
    paths:
      include:
        - internal/service/elasticbeanstalk
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ElasticBeanstalk"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: elasticbeanstalk-in-test-name
    languages:
      - go
    message: Include "ElasticBeanstalk" in test name
    paths:
      include:
        - internal/service/elasticbeanstalk/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccElasticBeanstalk"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: elasticbeanstalk-in-const-name
    languages:
      - go
    message: Do not use "ElasticBeanstalk" in const name inside elasticbeanstalk package
    paths:
      include:
        - internal/service/elasticbeanstalk
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ElasticBeanstalk"
    severity: WARNING
  - id: elasticbeanstalk-in-var-name
    languages:
      - go
    message: Do not use "ElasticBeanstalk" in var name inside elasticbeanstalk package
    paths:
      include:
      - internal/service/elasticbeanstalk
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ElasticBeanstalk"
    severity: WARNING
  - id: elasticsearchservice-in-func-name
    languages:
      - go
    message: Do not use "elasticsearchservice" in func name inside elasticsearch package
    paths:
      include:
        - internal/service/elasticsearch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)elasticsearchservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: elasticsearchservice-in-const-name
    languages:
      - go
    message: Do not use "elasticsearchservice" in const name inside elasticsearch package
    paths:
      include:
        - internal/service/elasticsearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)elasticsearchservice"
    severity: WARNING
  - id: elasticsearchservice-in-var-name
    languages:
      - go
    message: Do not use "elasticsearchservice" in var name inside elasticsearch package
    paths:
      include:
      - internal/service/elasticsearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)elasticsearchservice"
    severity: WARNING
  - id: elasticsearch-in-func-name
    languages:
      - go
    message: Do not use "Elasticsearch" in func name inside elasticsearch package
    paths:
      include:
        - internal/service/elasticsearch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Elasticsearch"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: elasticsearch-in-test-name
    languages:
      - go
    message: Include "Elasticsearch" in test name
    paths:
      include:
        - internal/service/elasticsearch/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccElasticsearch"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: elasticsearch-in-const-name
    languages:
      - go
    message: Do not use "Elasticsearch" in const name inside elasticsearch package
    paths:
      include:
        - internal/service/elasticsearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Elasticsearch"
    severity: WARNING
  - id: elasticsearch-in-var-name
    languages:
      - go
    message: Do not use "Elasticsearch" in var name inside elasticsearch package
    paths:
      include:
      - internal/service/elasticsearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Elasticsearch"
    severity: WARNING
  - id: es-in-func-name
    languages:
      - go
    message: Do not use "es" in func name inside elasticsearch package
    paths:
      include:
        - internal/service/elasticsearch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)es"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: es-in-const-name
    languages:
      - go
    message: Do not use "es" in const name inside elasticsearch package
    paths:
      include:
        - internal/service/elasticsearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)es"
    severity: WARNING
  - id: es-in-var-name
    languages:
      - go
    message: Do not use "es" in var name inside elasticsearch package
    paths:
      include:
      - internal/service/elasticsearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)es"
    severity: WARNING
  - id: elastictranscoder-in-func-name
    languages:
      - go
    message: Do not use "ElasticTranscoder" in func name inside elastictranscoder package
    paths:
      include:
        - internal/service/elastictranscoder
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ElasticTranscoder"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: elastictranscoder-in-test-name
    languages:
      - go
    message: Include "ElasticTranscoder" in test name
    paths:
      include:
        - internal/service/elastictranscoder/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccElasticTranscoder"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: elastictranscoder-in-const-name
    languages:
      - go
    message: Do not use "ElasticTranscoder" in const name inside elastictranscoder package
    paths:
      include:
        - internal/service/elastictranscoder
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ElasticTranscoder"
    severity: WARNING
  - id: elastictranscoder-in-var-name
    languages:
      - go
    message: Do not use "ElasticTranscoder" in var name inside elastictranscoder package
    paths:
      include:
      - internal/service/elastictranscoder
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ElasticTranscoder"
    severity: WARNING
  - id: elasticloadbalancing-in-func-name
    languages:
      - go
    message: Do not use "elasticloadbalancing" in func name inside elb package
    paths:
      include:
        - internal/service/elb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)elasticloadbalancing"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: elasticloadbalancing-in-const-name
    languages:
      - go
    message: Do not use "elasticloadbalancing" in const name inside elb package
    paths:
      include:
        - internal/service/elb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)elasticloadbalancing"
    severity: WARNING
  - id: elasticloadbalancing-in-var-name
    languages:
      - go
    message: Do not use "elasticloadbalancing" in var name inside elb package
    paths:
      include:
      - internal/service/elb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)elasticloadbalancing"
    severity: WARNING
  - id: elb-in-func-name
    languages:
      - go
    message: Do not use "ELB" in func name inside elb package
    paths:
      include:
        - internal/service/elb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ELB"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: elb-in-test-name
    languages:
      - go
    message: Include "ELB" in test name
    paths:
      include:
        - internal/service/elb/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccELB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: elb-in-const-name
    languages:
      - go
    message: Do not use "ELB" in const name inside elb package
    paths:
      include:
        - internal/service/elb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ELB"
    severity: WARNING
  - id: elb-in-var-name
    languages:
      - go
    message: Do not use "ELB" in var name inside elb package
    paths:
      include:
      - internal/service/elb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ELB"
    severity: WARNING
  - id: elasticloadbalancingv2-in-func-name
    languages:
      - go
    message: Do not use "elasticloadbalancingv2" in func name inside elbv2 package
    paths:
      include:
        - internal/service/elbv2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)elasticloadbalancingv2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: elasticloadbalancingv2-in-const-name
    languages:
      - go
    message: Do not use "elasticloadbalancingv2" in const name inside elbv2 package
    paths:
      include:
        - internal/service/elbv2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)elasticloadbalancingv2"
    severity: WARNING
  - id: elasticloadbalancingv2-in-var-name
    languages:
      - go
    message: Do not use "elasticloadbalancingv2" in var name inside elbv2 package
    paths:
      include:
      - internal/service/elbv2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)elasticloadbalancingv2"
    severity: WARNING
  - id: elbv2-in-func-name
    languages:
      - go
    message: Do not use "ELBV2" in func name inside elbv2 package
    paths:
      include:
        - internal/service/elbv2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ELBV2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: elbv2-in-test-name
    languages:
      - go
    message: Include "ELBV2" in test name
    paths:
      include:
        - internal/service/elbv2/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccELBV2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: elbv2-in-const-name
    languages:
      - go
    message: Do not use "ELBV2" in const name inside elbv2 package
    paths:
      include:
        - internal/service/elbv2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ELBV2"
    severity: WARNING
  - id: elbv2-in-var-name
    languages:
      - go
    message: Do not use "ELBV2" in var name inside elbv2 package
    paths:
      include:
      - internal/service/elbv2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ELBV2"
    severity: WARNING
  - id: emr-in-func-name
    languages:
      - go
    message: Do not use "EMR" in func name inside emr package
    paths:
      include:
        - internal/service/emr
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EMR"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: emr-in-test-name
    languages:
      - go
    message: Include "EMR" in test name
    paths:
      include:
        - internal/service/emr/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccEMR"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: emr-in-const-name
    languages:
      - go
    message: Do not use "EMR" in const name inside emr package
    paths:
      include:
        - internal/service/emr
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EMR"
    severity: WARNING
  - id: emr-in-var-name
    languages:
      - go
    message: Do not use "EMR" in var name inside emr package
    paths:
      include:
      - internal/service/emr
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EMR"
    severity: WARNING
  - id: emrcontainers-in-func-name
    languages:
      - go
    message: Do not use "EMRContainers" in func name inside emrcontainers package
    paths:
      include:
        - internal/service/emrcontainers
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EMRContainers"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: emrcontainers-in-test-name
    languages:
      - go
    message: Include "EMRContainers" in test name
    paths:
      include:
        - internal/service/emrcontainers/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccEMRContainers"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: emrcontainers-in-const-name
    languages:
      - go
    message: Do not use "EMRContainers" in const name inside emrcontainers package
    paths:
      include:
        - internal/service/emrcontainers
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EMRContainers"
    severity: WARNING
  - id: emrcontainers-in-var-name
    languages:
      - go
    message: Do not use "EMRContainers" in var name inside emrcontainers package
    paths:
      include:
      - internal/service/emrcontainers
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EMRContainers"
    severity: WARNING
  - id: cloudwatchevents-in-func-name
    languages:
      - go
    message: Do not use "cloudwatchevents" in func name inside events package
    paths:
      include:
        - internal/service/events
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudwatchevents"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudwatchevents-in-const-name
    languages:
      - go
    message: Do not use "cloudwatchevents" in const name inside events package
    paths:
      include:
        - internal/service/events
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudwatchevents"
    severity: WARNING
  - id: cloudwatchevents-in-var-name
    languages:
      - go
    message: Do not use "cloudwatchevents" in var name inside events package
    paths:
      include:
      - internal/service/events
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudwatchevents"
    severity: WARNING
  - id: eventbridge-in-func-name
    languages:
      - go
    message: Do not use "eventbridge" in func name inside events package
    paths:
      include:
        - internal/service/events
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)eventbridge"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: eventbridge-in-const-name
    languages:
      - go
    message: Do not use "eventbridge" in const name inside events package
    paths:
      include:
        - internal/service/events
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)eventbridge"
    severity: WARNING
  - id: eventbridge-in-var-name
    languages:
      - go
    message: Do not use "eventbridge" in var name inside events package
    paths:
      include:
      - internal/service/events
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)eventbridge"
    severity: WARNING
  - id: events-in-func-name
    languages:
      - go
    message: Do not use "Events" in func name inside events package
    paths:
      include:
        - internal/service/events
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Events"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: events-in-test-name
    languages:
      - go
    message: Include "Events" in test name
    paths:
      include:
        - internal/service/events/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccEvents"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: events-in-const-name
    languages:
      - go
    message: Do not use "Events" in const name inside events package
    paths:
      include:
        - internal/service/events
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Events"
    severity: WARNING
  - id: events-in-var-name
    languages:
      - go
    message: Do not use "Events" in var name inside events package
    paths:
      include:
      - internal/service/events
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Events"
    severity: WARNING
  - id: firehose-in-func-name
    languages:
      - go
    message: Do not use "Firehose" in func name inside firehose package
    paths:
      include:
        - internal/service/firehose
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Firehose"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: firehose-in-test-name
    languages:
      - go
    message: Include "Firehose" in test name
    paths:
      include:
        - internal/service/firehose/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccFirehose"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: firehose-in-const-name
    languages:
      - go
    message: Do not use "Firehose" in const name inside firehose package
    paths:
      include:
        - internal/service/firehose
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Firehose"
    severity: WARNING
  - id: firehose-in-var-name
    languages:
      - go
    message: Do not use "Firehose" in var name inside firehose package
    paths:
      include:
      - internal/service/firehose
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Firehose"
    severity: WARNING
  - id: fms-in-func-name
    languages:
      - go
    message: Do not use "FMS" in func name inside fms package
    paths:
      include:
        - internal/service/fms
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)FMS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: fms-in-test-name
    languages:
      - go
    message: Include "FMS" in test name
    paths:
      include:
        - internal/service/fms/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccFMS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: fms-in-const-name
    languages:
      - go
    message: Do not use "FMS" in const name inside fms package
    paths:
      include:
        - internal/service/fms
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)FMS"
    severity: WARNING
  - id: fms-in-var-name
    languages:
      - go
    message: Do not use "FMS" in var name inside fms package
    paths:
      include:
      - internal/service/fms
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)FMS"
    severity: WARNING
  - id: fsx-in-func-name
    languages:
      - go
    message: Do not use "FSx" in func name inside fsx package
    paths:
      include:
        - internal/service/fsx
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)FSx"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: fsx-in-test-name
    languages:
      - go
    message: Include "FSx" in test name
    paths:
      include:
        - internal/service/fsx/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccFSx"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: fsx-in-const-name
    languages:
      - go
    message: Do not use "FSx" in const name inside fsx package
    paths:
      include:
        - internal/service/fsx
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)FSx"
    severity: WARNING
  - id: fsx-in-var-name
    languages:
      - go
    message: Do not use "FSx" in var name inside fsx package
    paths:
      include:
      - internal/service/fsx
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)FSx"
    severity: WARNING
  - id: gamelift-in-func-name
    languages:
      - go
    message: Do not use "GameLift" in func name inside gamelift package
    paths:
      include:
        - internal/service/gamelift
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)GameLift"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: gamelift-in-test-name
    languages:
      - go
    message: Include "GameLift" in test name
    paths:
      include:
        - internal/service/gamelift/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccGameLift"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: gamelift-in-const-name
    languages:
      - go
    message: Do not use "GameLift" in const name inside gamelift package
    paths:
      include:
        - internal/service/gamelift
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)GameLift"
    severity: WARNING
  - id: gamelift-in-var-name
    languages:
      - go
    message: Do not use "GameLift" in var name inside gamelift package
    paths:
      include:
      - internal/service/gamelift
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)GameLift"
    severity: WARNING
  - id: glacier-in-func-name
    languages:
      - go
    message: Do not use "Glacier" in func name inside glacier package
    paths:
      include:
        - internal/service/glacier
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Glacier"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: glacier-in-test-name
    languages:
      - go
    message: Include "Glacier" in test name
    paths:
      include:
        - internal/service/glacier/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccGlacier"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: glacier-in-const-name
    languages:
      - go
    message: Do not use "Glacier" in const name inside glacier package
    paths:
      include:
        - internal/service/glacier
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Glacier"
    severity: WARNING
  - id: glacier-in-var-name
    languages:
      - go
    message: Do not use "Glacier" in var name inside glacier package
    paths:
      include:
      - internal/service/glacier
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Glacier"
    severity: WARNING
  - id: globalaccelerator-in-func-name
    languages:
      - go
    message: Do not use "GlobalAccelerator" in func name inside globalaccelerator package
    paths:
      include:
        - internal/service/globalaccelerator
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)GlobalAccelerator"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: globalaccelerator-in-test-name
    languages:
      - go
    message: Include "GlobalAccelerator" in test name
    paths:
      include:
        - internal/service/globalaccelerator/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccGlobalAccelerator"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: globalaccelerator-in-const-name
    languages:
      - go
    message: Do not use "GlobalAccelerator" in const name inside globalaccelerator package
    paths:
      include:
        - internal/service/globalaccelerator
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)GlobalAccelerator"
    severity: WARNING
  - id: globalaccelerator-in-var-name
    languages:
      - go
    message: Do not use "GlobalAccelerator" in var name inside globalaccelerator package
    paths:
      include:
      - internal/service/globalaccelerator
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)GlobalAccelerator"
    severity: WARNING
  - id: glue-in-func-name
    languages:
      - go
    message: Do not use "Glue" in func name inside glue package
    paths:
      include:
        - internal/service/glue
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Glue"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: glue-in-test-name
    languages:
      - go
    message: Include "Glue" in test name
    paths:
      include:
        - internal/service/glue/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccGlue"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: glue-in-const-name
    languages:
      - go
    message: Do not use "Glue" in const name inside glue package
    paths:
      include:
        - internal/service/glue
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Glue"
    severity: WARNING
  - id: glue-in-var-name
    languages:
      - go
    message: Do not use "Glue" in var name inside glue package
    paths:
      include:
      - internal/service/glue
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Glue"
    severity: WARNING
  - id: managedgrafana-in-func-name
    languages:
      - go
    message: Do not use "managedgrafana" in func name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)managedgrafana"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: managedgrafana-in-const-name
    languages:
      - go
    message: Do not use "managedgrafana" in const name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)managedgrafana"
    severity: WARNING
  - id: managedgrafana-in-var-name
    languages:
      - go
    message: Do not use "managedgrafana" in var name inside grafana package
    paths:
      include:
      - internal/service/grafana
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)managedgrafana"
    severity: WARNING
  - id: grafana-in-func-name
    languages:
      - go
    message: Do not use "Grafana" in func name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Grafana"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: grafana-in-test-name
    languages:
      - go
    message: Include "Grafana" in test name
    paths:
      include:
        - internal/service/grafana/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccGrafana"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: grafana-in-const-name
    languages:
      - go
    message: Do not use "Grafana" in const name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Grafana"
    severity: WARNING
  - id: grafana-in-var-name
    languages:
      - go
    message: Do not use "Grafana" in var name inside grafana package
    paths:
      include:
      - internal/service/grafana
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Grafana"
    severity: WARNING
  - id: amg-in-func-name
    languages:
      - go
    message: Do not use "amg" in func name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)amg"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: amg-in-const-name
    languages:
      - go
    message: Do not use "amg" in const name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)amg"
    severity: WARNING
  - id: amg-in-var-name
    languages:
      - go
    message: Do not use "amg" in var name inside grafana package
    paths:
      include:
      - internal/service/grafana
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)amg"
    severity: WARNING
  - id: greengrass-in-func-name
    languages:
      - go
    message: Do not use "Greengrass" in func name inside greengrass package
    paths:
      include:
        - internal/service/greengrass
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Greengrass"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: greengrass-in-test-name
    languages:
      - go
    message: Include "Greengrass" in test name
    paths:
      include:
        - internal/service/greengrass/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccGreengrass"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: greengrass-in-const-name
    languages:
      - go
    message: Do not use "Greengrass" in const name inside greengrass package
    paths:
      include:
        - internal/service/greengrass
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Greengrass"
    severity: WARNING
  - id: greengrass-in-var-name
    languages:
      - go
    message: Do not use "Greengrass" in var name inside greengrass package
    paths:
      include:
      - internal/service/greengrass
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Greengrass"
    severity: WARNING
  - id: guardduty-in-func-name
    languages:
      - go
    message: Do not use "GuardDuty" in func name inside guardduty package
    paths:
      include:
        - internal/service/guardduty
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)GuardDuty"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: guardduty-in-test-name
    languages:
      - go
    message: Include "GuardDuty" in test name
    paths:
      include:
        - internal/service/guardduty/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccGuardDuty"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: guardduty-in-const-name
    languages:
      - go
    message: Do not use "GuardDuty" in const name inside guardduty package
    paths:
      include:
        - internal/service/guardduty
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)GuardDuty"
    severity: WARNING
  - id: guardduty-in-var-name
    languages:
      - go
    message: Do not use "GuardDuty" in var name inside guardduty package
    paths:
      include:
      - internal/service/guardduty
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)GuardDuty"
    severity: WARNING
  - id: iam-in-func-name
    languages:
      - go
    message: Do not use "IAM" in func name inside iam package
    paths:
      include:
        - internal/service/iam
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IAM"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: iam-in-test-name
    languages:
      - go
    message: Include "IAM" in test name
    paths:
      include:
        - internal/service/iam/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIAM"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iam-in-const-name
    languages:
      - go
    message: Do not use "IAM" in const name inside iam package
    paths:
      include:
        - internal/service/iam
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IAM"
    severity: WARNING
  - id: iam-in-var-name
    languages:
      - go
    message: Do not use "IAM" in var name inside iam package
    paths:
      include:
      - internal/service/iam
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IAM"
    severity: WARNING
  - id: identitystore-in-func-name
    languages:
      - go
    message: Do not use "IdentityStore" in func name inside identitystore package
    paths:
      include:
        - internal/service/identitystore
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IdentityStore"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: identitystore-in-test-name
    languages:
      - go
    message: Include "IdentityStore" in test name
    paths:
      include:
        - internal/service/identitystore/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIdentityStore"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: identitystore-in-const-name
    languages:
      - go
    message: Do not use "IdentityStore" in const name inside identitystore package
    paths:
      include:
        - internal/service/identitystore
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IdentityStore"
    severity: WARNING
  - id: identitystore-in-var-name
    languages:
      - go
    message: Do not use "IdentityStore" in var name inside identitystore package
    paths:
      include:
      - internal/service/identitystore
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IdentityStore"
    severity: WARNING
  - id: imagebuilder-in-func-name
    languages:
      - go
    message: Do not use "ImageBuilder" in func name inside imagebuilder package
    paths:
      include:
        - internal/service/imagebuilder
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ImageBuilder"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: imagebuilder-in-test-name
    languages:
      - go
    message: Include "ImageBuilder" in test name
    paths:
      include:
        - internal/service/imagebuilder/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccImageBuilder"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: imagebuilder-in-const-name
    languages:
      - go
    message: Do not use "ImageBuilder" in const name inside imagebuilder package
    paths:
      include:
        - internal/service/imagebuilder
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ImageBuilder"
    severity: WARNING
  - id: imagebuilder-in-var-name
    languages:
      - go
    message: Do not use "ImageBuilder" in var name inside imagebuilder package
    paths:
      include:
      - internal/service/imagebuilder
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ImageBuilder"
    severity: WARNING
  - id: inspector-in-func-name
    languages:
      - go
    message: Do not use "Inspector" in func name inside inspector package
    paths:
      include:
        - internal/service/inspector
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Inspector"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: inspector-in-test-name
    languages:
      - go
    message: Include "Inspector" in test name
    paths:
      include:
        - internal/service/inspector/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccInspector"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: inspector-in-const-name
    languages:
      - go
    message: Do not use "Inspector" in const name inside inspector package
    paths:
      include:
        - internal/service/inspector
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Inspector"
    severity: WARNING
  - id: inspector-in-var-name
    languages:
      - go
    message: Do not use "Inspector" in var name inside inspector package
    paths:
      include:
      - internal/service/inspector
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Inspector"
    severity: WARNING
  - id: iot-in-func-name
    languages:
      - go
    message: Do not use "IoT" in func name inside iot package
    paths:
      include:
        - internal/service/iot
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoT"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: iot-in-test-name
    languages:
      - go
    message: Include "IoT" in test name
    paths:
      include:
        - internal/service/iot/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIoT"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iot-in-const-name
    languages:
      - go
    message: Do not use "IoT" in const name inside iot package
    paths:
      include:
        - internal/service/iot
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoT"
    severity: WARNING
  - id: iot-in-var-name
    languages:
      - go
    message: Do not use "IoT" in var name inside iot package
    paths:
      include:
      - internal/service/iot
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoT"
    severity: WARNING
  - id: iotanalytics-in-func-name
    languages:
      - go
    message: Do not use "IoTAnalytics" in func name inside iotanalytics package
    paths:
      include:
        - internal/service/iotanalytics
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTAnalytics"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: iotanalytics-in-test-name
    languages:
      - go
    message: Include "IoTAnalytics" in test name
    paths:
      include:
        - internal/service/iotanalytics/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIoTAnalytics"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iotanalytics-in-const-name
    languages:
      - go
    message: Do not use "IoTAnalytics" in const name inside iotanalytics package
    paths:
      include:
        - internal/service/iotanalytics
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTAnalytics"
    severity: WARNING
  - id: iotanalytics-in-var-name
    languages:
      - go
    message: Do not use "IoTAnalytics" in var name inside iotanalytics package
    paths:
      include:
      - internal/service/iotanalytics
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTAnalytics"
    severity: WARNING
  - id: iotevents-in-func-name
    languages:
      - go
    message: Do not use "IoTEvents" in func name inside iotevents package
    paths:
      include:
        - internal/service/iotevents
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTEvents"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: iotevents-in-test-name
    languages:
      - go
    message: Include "IoTEvents" in test name
    paths:
      include:
        - internal/service/iotevents/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIoTEvents"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iotevents-in-const-name
    languages:
      - go
    message: Do not use "IoTEvents" in const name inside iotevents package
    paths:
      include:
        - internal/service/iotevents
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTEvents"
    severity: WARNING
  - id: iotevents-in-var-name
    languages:
      - go
    message: Do not use "IoTEvents" in var name inside iotevents package
    paths:
      include:
      - internal/service/iotevents
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTEvents"
    severity: WARNING
  - id: kafka-in-func-name
    languages:
      - go
    message: Do not use "Kafka" in func name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kafka"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kafka-in-test-name
    languages:
      - go
    message: Include "Kafka" in test name
    paths:
      include:
        - internal/service/kafka/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKafka"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kafka-in-const-name
    languages:
      - go
    message: Do not use "Kafka" in const name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kafka"
    severity: WARNING
  - id: kafka-in-var-name
    languages:
      - go
    message: Do not use "Kafka" in var name inside kafka package
    paths:
      include:
      - internal/service/kafka
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kafka"
    severity: WARNING
  - id: kafkaconnect-in-func-name
    languages:
      - go
    message: Do not use "KafkaConnect" in func name inside kafkaconnect package
    paths:
      include:
        - internal/service/kafkaconnect
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KafkaConnect"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kafkaconnect-in-test-name
    languages:
      - go
    message: Include "KafkaConnect" in test name
    paths:
      include:
        - internal/service/kafkaconnect/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKafkaConnect"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kafkaconnect-in-const-name
    languages:
      - go
    message: Do not use "KafkaConnect" in const name inside kafkaconnect package
    paths:
      include:
        - internal/service/kafkaconnect
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KafkaConnect"
    severity: WARNING
  - id: kafkaconnect-in-var-name
    languages:
      - go
    message: Do not use "KafkaConnect" in var name inside kafkaconnect package
    paths:
      include:
      - internal/service/kafkaconnect
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KafkaConnect"
    severity: WARNING
  - id: keyspaces-in-func-name
    languages:
      - go
    message: Do not use "Keyspaces" in func name inside keyspaces package
    paths:
      include:
        - internal/service/keyspaces
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Keyspaces"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: keyspaces-in-test-name
    languages:
      - go
    message: Include "Keyspaces" in test name
    paths:
      include:
        - internal/service/keyspaces/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKeyspaces"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: keyspaces-in-const-name
    languages:
      - go
    message: Do not use "Keyspaces" in const name inside keyspaces package
    paths:
      include:
        - internal/service/keyspaces
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Keyspaces"
    severity: WARNING
  - id: keyspaces-in-var-name
    languages:
      - go
    message: Do not use "Keyspaces" in var name inside keyspaces package
    paths:
      include:
      - internal/service/keyspaces
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Keyspaces"
    severity: WARNING
  - id: kinesis-in-func-name
    languages:
      - go
    message: Do not use "Kinesis" in func name inside kinesis package
    paths:
      include:
        - internal/service/kinesis
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kinesis"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesis-in-test-name
    languages:
      - go
    message: Include "Kinesis" in test name
    paths:
      include:
        - internal/service/kinesis/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesis"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesis-in-const-name
    languages:
      - go
    message: Do not use "Kinesis" in const name inside kinesis package
    paths:
      include:
        - internal/service/kinesis
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kinesis"
    severity: WARNING
  - id: kinesis-in-var-name
    languages:
      - go
    message: Do not use "Kinesis" in var name inside kinesis package
    paths:
      include:
      - internal/service/kinesis
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kinesis"
    severity: WARNING
  - id: kinesisanalytics-in-func-name
    languages:
      - go
    message: Do not use "KinesisAnalytics" in func name inside kinesisanalytics package
    paths:
      include:
        - internal/service/kinesisanalytics
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalytics"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalytics-in-test-name
    languages:
      - go
    message: Include "KinesisAnalytics" in test name
    paths:
      include:
        - internal/service/kinesisanalytics/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesisAnalytics"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalytics-in-const-name
    languages:
      - go
    message: Do not use "KinesisAnalytics" in const name inside kinesisanalytics package
    paths:
      include:
        - internal/service/kinesisanalytics
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalytics"
    severity: WARNING
  - id: kinesisanalytics-in-var-name
    languages:
      - go
    message: Do not use "KinesisAnalytics" in var name inside kinesisanalytics package
    paths:
      include:
      - internal/service/kinesisanalytics
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalytics"
    severity: WARNING
  - id: kinesisanalyticsv2-in-func-name
    languages:
      - go
    message: Do not use "KinesisAnalyticsV2" in func name inside kinesisanalyticsv2 package
    paths:
      include:
        - internal/service/kinesisanalyticsv2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalyticsV2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalyticsv2-in-test-name
    languages:
      - go
    message: Include "KinesisAnalyticsV2" in test name
    paths:
      include:
        - internal/service/kinesisanalyticsv2/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesisAnalyticsV2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalyticsv2-in-const-name
    languages:
      - go
    message: Do not use "KinesisAnalyticsV2" in const name inside kinesisanalyticsv2 package
    paths:
      include:
        - internal/service/kinesisanalyticsv2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalyticsV2"
    severity: WARNING
  - id: kinesisanalyticsv2-in-var-name
    languages:
      - go
    message: Do not use "KinesisAnalyticsV2" in var name inside kinesisanalyticsv2 package
    paths:
      include:
      - internal/service/kinesisanalyticsv2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalyticsV2"
    severity: WARNING
  - id: kinesisvideo-in-func-name
    languages:
      - go
    message: Do not use "KinesisVideo" in func name inside kinesisvideo package
    paths:
      include:
        - internal/service/kinesisvideo
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisVideo"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisvideo-in-test-name
    languages:
      - go
    message: Include "KinesisVideo" in test name
    paths:
      include:
        - internal/service/kinesisvideo/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesisVideo"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisvideo-in-const-name
    languages:
      - go
    message: Do not use "KinesisVideo" in const name inside kinesisvideo package
    paths:
      include:
        - internal/service/kinesisvideo
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisVideo"
    severity: WARNING
  - id: kinesisvideo-in-var-name
    languages:
      - go
    message: Do not use "KinesisVideo" in var name inside kinesisvideo package
    paths:
      include:
      - internal/service/kinesisvideo
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisVideo"
    severity: WARNING
  - id: kms-in-func-name
    languages:
      - go
    message: Do not use "KMS" in func name inside kms package
    paths:
      include:
        - internal/service/kms
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KMS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kms-in-test-name
    languages:
      - go
    message: Include "KMS" in test name
    paths:
      include:
        - internal/service/kms/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKMS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kms-in-const-name
    languages:
      - go
    message: Do not use "KMS" in const name inside kms package
    paths:
      include:
        - internal/service/kms
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KMS"
    severity: WARNING
  - id: kms-in-var-name
    languages:
      - go
    message: Do not use "KMS" in var name inside kms package
    paths:
      include:
      - internal/service/kms
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KMS"
    severity: WARNING
  - id: lakeformation-in-func-name
    languages:
      - go
    message: Do not use "LakeFormation" in func name inside lakeformation package
    paths:
      include:
        - internal/service/lakeformation
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LakeFormation"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lakeformation-in-test-name
    languages:
      - go
    message: Include "LakeFormation" in test name
    paths:
      include:
        - internal/service/lakeformation/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLakeFormation"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lakeformation-in-const-name
    languages:
      - go
    message: Do not use "LakeFormation" in const name inside lakeformation package
    paths:
      include:
        - internal/service/lakeformation
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LakeFormation"
    severity: WARNING
  - id: lakeformation-in-var-name
    languages:
      - go
    message: Do not use "LakeFormation" in var name inside lakeformation package
    paths:
      include:
      - internal/service/lakeformation
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LakeFormation"
    severity: WARNING
  - id: lambda-in-func-name
    languages:
      - go
    message: Do not use "Lambda" in func name inside lambda package
    paths:
      include:
        - internal/service/lambda
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lambda"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lambda-in-test-name
    languages:
      - go
    message: Include "Lambda" in test name
    paths:
      include:
        - internal/service/lambda/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLambda"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lambda-in-const-name
    languages:
      - go
    message: Do not use "Lambda" in const name inside lambda package
    paths:
      include:
        - internal/service/lambda
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lambda"
    severity: WARNING
  - id: lambda-in-var-name
    languages:
      - go
    message: Do not use "Lambda" in var name inside lambda package
    paths:
      include:
      - internal/service/lambda
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lambda"
    severity: WARNING
  - id: lexmodelbuildingservice-in-func-name
    languages:
      - go
    message: Do not use "lexmodelbuildingservice" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuildingservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lexmodelbuildingservice-in-const-name
    languages:
      - go
    message: Do not use "lexmodelbuildingservice" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuildingservice"
    severity: WARNING
  - id: lexmodelbuildingservice-in-var-name
    languages:
      - go
    message: Do not use "lexmodelbuildingservice" in var name inside lexmodels package
    paths:
      include:
      - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuildingservice"
    severity: WARNING
  - id: lexmodelbuilding-in-func-name
    languages:
      - go
    message: Do not use "lexmodelbuilding" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuilding"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lexmodelbuilding-in-const-name
    languages:
      - go
    message: Do not use "lexmodelbuilding" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuilding"
    severity: WARNING
  - id: lexmodelbuilding-in-var-name
    languages:
      - go
    message: Do not use "lexmodelbuilding" in var name inside lexmodels package
    paths:
      include:
      - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuilding"
    severity: WARNING
  - id: lexmodels-in-func-name
    languages:
      - go
    message: Do not use "LexModels" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexModels"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lexmodels-in-test-name
    languages:
      - go
    message: Include "LexModels" in test name
    paths:
      include:
        - internal/service/lexmodels/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLexModels"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lexmodels-in-const-name
    languages:
      - go
    message: Do not use "LexModels" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexModels"
    severity: WARNING
  - id: lexmodels-in-var-name
    languages:
      - go
    message: Do not use "LexModels" in var name inside lexmodels package
    paths:
      include:
      - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexModels"
    severity: WARNING
  - id: lex-in-func-name
    languages:
      - go
    message: Do not use "lex" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lex"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lex-in-const-name
    languages:
      - go
    message: Do not use "lex" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lex"
    severity: WARNING
  - id: lex-in-var-name
    languages:
      - go
    message: Do not use "lex" in var name inside lexmodels package
    paths:
      include:
      - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lex"
    severity: WARNING
  - id: licensemanager-in-func-name
    languages:
      - go
    message: Do not use "LicenseManager" in func name inside licensemanager package
    paths:
      include:
        - internal/service/licensemanager
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LicenseManager"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: licensemanager-in-test-name
    languages:
      - go
    message: Include "LicenseManager" in test name
    paths:
      include:
        - internal/service/licensemanager/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLicenseManager"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: licensemanager-in-const-name
    languages:
      - go
    message: Do not use "LicenseManager" in const name inside licensemanager package
    paths:
      include:
        - internal/service/licensemanager
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LicenseManager"
    severity: WARNING
  - id: licensemanager-in-var-name
    languages:
      - go
    message: Do not use "LicenseManager" in var name inside licensemanager package
    paths:
      include:
      - internal/service/licensemanager
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LicenseManager"
    severity: WARNING
  - id: lightsail-in-func-name
    languages:
      - go
    message: Do not use "Lightsail" in func name inside lightsail package
    paths:
      include:
        - internal/service/lightsail
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lightsail"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lightsail-in-test-name
    languages:
      - go
    message: Include "Lightsail" in test name
    paths:
      include:
        - internal/service/lightsail/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLightsail"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lightsail-in-const-name
    languages:
      - go
    message: Do not use "Lightsail" in const name inside lightsail package
    paths:
      include:
        - internal/service/lightsail
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lightsail"
    severity: WARNING
  - id: lightsail-in-var-name
    languages:
      - go
    message: Do not use "Lightsail" in var name inside lightsail package
    paths:
      include:
      - internal/service/lightsail
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lightsail"
    severity: WARNING
  - id: locationservice-in-func-name
    languages:
      - go
    message: Do not use "locationservice" in func name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)locationservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: locationservice-in-const-name
    languages:
      - go
    message: Do not use "locationservice" in const name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)locationservice"
    severity: WARNING
  - id: locationservice-in-var-name
    languages:
      - go
    message: Do not use "locationservice" in var name inside location package
    paths:
      include:
      - internal/service/location
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)locationservice"
    severity: WARNING
  - id: location-in-func-name
    languages:
      - go
    message: Do not use "Location" in func name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Location"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: location-in-test-name
    languages:
      - go
    message: Include "Location" in test name
    paths:
      include:
        - internal/service/location/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLocation"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: location-in-const-name
    languages:
      - go
    message: Do not use "Location" in const name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Location"
    severity: WARNING
  - id: location-in-var-name
    languages:
      - go
    message: Do not use "Location" in var name inside location package
    paths:
      include:
      - internal/service/location
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Location"
    severity: WARNING
  - id: cloudwatchlogs-in-func-name
    languages:
      - go
    message: Do not use "cloudwatchlogs" in func name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudwatchlogs"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudwatchlogs-in-const-name
    languages:
      - go
    message: Do not use "cloudwatchlogs" in const name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudwatchlogs"
    severity: WARNING
  - id: cloudwatchlogs-in-var-name
    languages:
      - go
    message: Do not use "cloudwatchlogs" in var name inside logs package
    paths:
      include:
      - internal/service/logs
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudwatchlogs"
    severity: WARNING
  - id: cloudwatchlog-in-func-name
    languages:
      - go
    message: Do not use "cloudwatchlog" in func name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudwatchlog"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: cloudwatchlog-in-const-name
    languages:
      - go
    message: Do not use "cloudwatchlog" in const name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudwatchlog"
    severity: WARNING
  - id: cloudwatchlog-in-var-name
    languages:
      - go
    message: Do not use "cloudwatchlog" in var name inside logs package
    paths:
      include:
      - internal/service/logs
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)cloudwatchlog"
    severity: WARNING
  - id: logs-in-func-name
    languages:
      - go
    message: Do not use "Logs" in func name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Logs"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: logs-in-test-name
    languages:
      - go
    message: Include "Logs" in test name
    paths:
      include:
        - internal/service/logs/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLogs"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: logs-in-const-name
    languages:
      - go
    message: Do not use "Logs" in const name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Logs"
    severity: WARNING
  - id: logs-in-var-name
    languages:
      - go
    message: Do not use "Logs" in var name inside logs package
    paths:
      include:
      - internal/service/logs
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Logs"
    severity: WARNING
  - id: macie-in-func-name
    languages:
      - go
    message: Do not use "Macie" in func name inside macie package
    paths:
      include:
        - internal/service/macie
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: macie-in-test-name
    languages:
      - go
    message: Include "Macie" in test name
    paths:
      include:
        - internal/service/macie/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMacie"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: macie-in-const-name
    languages:
      - go
    message: Do not use "Macie" in const name inside macie package
    paths:
      include:
        - internal/service/macie
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie"
    severity: WARNING
  - id: macie-in-var-name
    languages:
      - go
    message: Do not use "Macie" in var name inside macie package
    paths:
      include:
      - internal/service/macie
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie"
    severity: WARNING
  - id: macie2-in-func-name
    languages:
      - go
    message: Do not use "Macie2" in func name inside macie2 package
    paths:
      include:
        - internal/service/macie2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: macie2-in-test-name
    languages:
      - go
    message: Include "Macie2" in test name
    paths:
      include:
        - internal/service/macie2/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMacie2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: macie2-in-const-name
    languages:
      - go
    message: Do not use "Macie2" in const name inside macie2 package
    paths:
      include:
        - internal/service/macie2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie2"
    severity: WARNING
  - id: macie2-in-var-name
    languages:
      - go
    message: Do not use "Macie2" in var name inside macie2 package
    paths:
      include:
      - internal/service/macie2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie2"
    severity: WARNING
  - id: mediaconnect-in-func-name
    languages:
      - go
    message: Do not use "MediaConnect" in func name inside mediaconnect package
    paths:
      include:
        - internal/service/mediaconnect
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConnect"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconnect-in-test-name
    languages:
      - go
    message: Include "MediaConnect" in test name
    paths:
      include:
        - internal/service/mediaconnect/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaConnect"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconnect-in-const-name
    languages:
      - go
    message: Do not use "MediaConnect" in const name inside mediaconnect package
    paths:
      include:
        - internal/service/mediaconnect
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConnect"
    severity: WARNING
  - id: mediaconnect-in-var-name
    languages:
      - go
    message: Do not use "MediaConnect" in var name inside mediaconnect package
    paths:
      include:
      - internal/service/mediaconnect
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConnect"
    severity: WARNING
  - id: mediaconvert-in-func-name
    languages:
      - go
    message: Do not use "MediaConvert" in func name inside mediaconvert package
    paths:
      include:
        - internal/service/mediaconvert
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConvert"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconvert-in-test-name
    languages:
      - go
    message: Include "MediaConvert" in test name
    paths:
      include:
        - internal/service/mediaconvert/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaConvert"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconvert-in-const-name
    languages:
      - go
    message: Do not use "MediaConvert" in const name inside mediaconvert package
    paths:
      include:
        - internal/service/mediaconvert
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConvert"
    severity: WARNING
  - id: mediaconvert-in-var-name
    languages:
      - go
    message: Do not use "MediaConvert" in var name inside mediaconvert package
    paths:
      include:
      - internal/service/mediaconvert
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConvert"
    severity: WARNING
  - id: medialive-in-func-name
    languages:
      - go
    message: Do not use "MediaLive" in func name inside medialive package
    paths:
      include:
        - internal/service/medialive
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaLive"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: medialive-in-test-name
    languages:
      - go
    message: Include "MediaLive" in test name
    paths:
      include:
        - internal/service/medialive/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaLive"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: medialive-in-const-name
    languages:
      - go
    message: Do not use "MediaLive" in const name inside medialive package
    paths:
      include:
        - internal/service/medialive
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaLive"
    severity: WARNING
  - id: medialive-in-var-name
    languages:
      - go
    message: Do not use "MediaLive" in var name inside medialive package
    paths:
      include:
      - internal/service/medialive
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaLive"
    severity: WARNING
  - id: mediapackage-in-func-name
    languages:
      - go
    message: Do not use "MediaPackage" in func name inside mediapackage package
    paths:
      include:
        - internal/service/mediapackage
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackage"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mediapackage-in-test-name
    languages:
      - go
    message: Include "MediaPackage" in test name
    paths:
      include:
        - internal/service/mediapackage/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaPackage"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediapackage-in-const-name
    languages:
      - go
    message: Do not use "MediaPackage" in const name inside mediapackage package
    paths:
      include:
        - internal/service/mediapackage
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackage"
    severity: WARNING
  - id: mediapackage-in-var-name
    languages:
      - go
    message: Do not use "MediaPackage" in var name inside mediapackage package
    paths:
      include:
      - internal/service/mediapackage
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackage"
    severity: WARNING
  - id: mediastore-in-func-name
    languages:
      - go
    message: Do not use "MediaStore" in func name inside mediastore package
    paths:
      include:
        - internal/service/mediastore
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaStore"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mediastore-in-test-name
    languages:
      - go
    message: Include "MediaStore" in test name
    paths:
      include:
        - internal/service/mediastore/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaStore"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediastore-in-const-name
    languages:
      - go
    message: Do not use "MediaStore" in const name inside mediastore package
    paths:
      include:
        - internal/service/mediastore
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaStore"
    severity: WARNING
  - id: mediastore-in-var-name
    languages:
      - go
    message: Do not use "MediaStore" in var name inside mediastore package
    paths:
      include:
      - internal/service/mediastore
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaStore"
    severity: WARNING
  - id: memorydb-in-func-name
    languages:
      - go
    message: Do not use "MemoryDB" in func name inside memorydb package
    paths:
      include:
        - internal/service/memorydb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MemoryDB"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: memorydb-in-test-name
    languages:
      - go
    message: Include "MemoryDB" in test name
    paths:
      include:
        - internal/service/memorydb/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMemoryDB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: memorydb-in-const-name
    languages:
      - go
    message: Do not use "MemoryDB" in const name inside memorydb package
    paths:
      include:
        - internal/service/memorydb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MemoryDB"
    severity: WARNING
  - id: memorydb-in-var-name
    languages:
      - go
    message: Do not use "MemoryDB" in var name inside memorydb package
    paths:
      include:
      - internal/service/memorydb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MemoryDB"
    severity: WARNING
  - id: meta-in-func-name
    languages:
      - go
    message: Do not use "Meta" in func name inside meta package
    paths:
      include:
        - internal/service/meta
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Meta"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: meta-in-test-name
    languages:
      - go
    message: Include "Meta" in test name
    paths:
      include:
        - internal/service/meta/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMeta"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: meta-in-const-name
    languages:
      - go
    message: Do not use "Meta" in const name inside meta package
    paths:
      include:
        - internal/service/meta
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Meta"
    severity: WARNING
  - id: meta-in-var-name
    languages:
      - go
    message: Do not use "Meta" in var name inside meta package
    paths:
      include:
      - internal/service/meta
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Meta"
    severity: WARNING
  - id: mq-in-func-name
    languages:
      - go
    message: Do not use "MQ" in func name inside mq package
    paths:
      include:
        - internal/service/mq
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MQ"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mq-in-test-name
    languages:
      - go
    message: Include "MQ" in test name
    paths:
      include:
        - internal/service/mq/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMQ"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mq-in-const-name
    languages:
      - go
    message: Do not use "MQ" in const name inside mq package
    paths:
      include:
        - internal/service/mq
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MQ"
    severity: WARNING
  - id: mq-in-var-name
    languages:
      - go
    message: Do not use "MQ" in var name inside mq package
    paths:
      include:
      - internal/service/mq
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MQ"
    severity: WARNING
  - id: mwaa-in-func-name
    languages:
      - go
    message: Do not use "MWAA" in func name inside mwaa package
    paths:
      include:
        - internal/service/mwaa
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MWAA"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mwaa-in-test-name
    languages:
      - go
    message: Include "MWAA" in test name
    paths:
      include:
        - internal/service/mwaa/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMWAA"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mwaa-in-const-name
    languages:
      - go
    message: Do not use "MWAA" in const name inside mwaa package
    paths:
      include:
        - internal/service/mwaa
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MWAA"
    severity: WARNING
  - id: mwaa-in-var-name
    languages:
      - go
    message: Do not use "MWAA" in var name inside mwaa package
    paths:
      include:
      - internal/service/mwaa
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MWAA"
    severity: WARNING
  - id: neptune-in-func-name
    languages:
      - go
    message: Do not use "Neptune" in func name inside neptune package
    paths:
      include:
        - internal/service/neptune
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Neptune"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: neptune-in-test-name
    languages:
      - go
    message: Include "Neptune" in test name
    paths:
      include:
        - internal/service/neptune/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNeptune"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: neptune-in-const-name
    languages:
      - go
    message: Do not use "Neptune" in const name inside neptune package
    paths:
      include:
        - internal/service/neptune
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Neptune"
    severity: WARNING
  - id: neptune-in-var-name
    languages:
      - go
    message: Do not use "Neptune" in var name inside neptune package
    paths:
      include:
      - internal/service/neptune
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Neptune"
    severity: WARNING
  - id: networkfirewall-in-func-name
    languages:
      - go
    message: Do not use "NetworkFirewall" in func name inside networkfirewall package
    paths:
      include:
        - internal/service/networkfirewall
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkFirewall"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: networkfirewall-in-test-name
    languages:
      - go
    message: Include "NetworkFirewall" in test name
    paths:
      include:
        - internal/service/networkfirewall/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNetworkFirewall"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: networkfirewall-in-const-name
    languages:
      - go
    message: Do not use "NetworkFirewall" in const name inside networkfirewall package
    paths:
      include:
        - internal/service/networkfirewall
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkFirewall"
    severity: WARNING
  - id: networkfirewall-in-var-name
    languages:
      - go
    message: Do not use "NetworkFirewall" in var name inside networkfirewall package
    paths:
      include:
      - internal/service/networkfirewall
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkFirewall"
    severity: WARNING
  - id: networkmanager-in-func-name
    languages:
      - go
    message: Do not use "NetworkManager" in func name inside networkmanager package
    paths:
      include:
        - internal/service/networkmanager
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkManager"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: networkmanager-in-test-name
    languages:
      - go
    message: Include "NetworkManager" in test name
    paths:
      include:
        - internal/service/networkmanager/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNetworkManager"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: networkmanager-in-const-name
    languages:
      - go
    message: Do not use "NetworkManager" in const name inside networkmanager package
    paths:
      include:
        - internal/service/networkmanager
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkManager"
    severity: WARNING
  - id: networkmanager-in-var-name
    languages:
      - go
    message: Do not use "NetworkManager" in var name inside networkmanager package
    paths:
      include:
      - internal/service/networkmanager
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkManager"
    severity: WARNING
  - id: opensearchservice-in-func-name
    languages:
      - go
    message: Do not use "opensearchservice" in func name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: opensearchservice-in-const-name
    languages:
      - go
    message: Do not use "opensearchservice" in const name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchservice"
    severity: WARNING
  - id: opensearchservice-in-var-name
    languages:
      - go
    message: Do not use "opensearchservice" in var name inside opensearch package
    paths:
      include:
      - internal/service/opensearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchservice"
    severity: WARNING
  - id: opensearch-in-func-name
    languages:
      - go
    message: Do not use "OpenSearch" in func name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearch"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: opensearch-in-test-name
    languages:
      - go
    message: Include "OpenSearch" in test name
    paths:
      include:
        - internal/service/opensearch/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOpenSearch"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: opensearch-in-const-name
    languages:
      - go
    message: Do not use "OpenSearch" in const name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearch"
    severity: WARNING
  - id: opensearch-in-var-name
    languages:
      - go
    message: Do not use "OpenSearch" in var name inside opensearch package
    paths:
      include:
      - internal/service/opensearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearch"
    severity: WARNING
  - id: opsworks-in-func-name
    languages:
      - go
    message: Do not use "OpsWorks" in func name inside opsworks package
    paths:
      include:
        - internal/service/opsworks
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpsWorks"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: opsworks-in-test-name
    languages:
      - go
    message: Include "OpsWorks" in test name
    paths:
      include:
        - internal/service/opsworks/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOpsWorks"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: opsworks-in-const-name
    languages:
      - go
    message: Do not use "OpsWorks" in const name inside opsworks package
    paths:
      include:
        - internal/service/opsworks
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpsWorks"
    severity: WARNING
  - id: opsworks-in-var-name
    languages:
      - go
    message: Do not use "OpsWorks" in var name inside opsworks package
    paths:
      include:
      - internal/service/opsworks
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpsWorks"
    severity: WARNING
  - id: organizations-in-func-name
    languages:
      - go
    message: Do not use "Organizations" in func name inside organizations package
    paths:
      include:
        - internal/service/organizations
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Organizations"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: organizations-in-test-name
    languages:
      - go
    message: Include "Organizations" in test name
    paths:
      include:
        - internal/service/organizations/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOrganizations"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: organizations-in-const-name
    languages:
      - go
    message: Do not use "Organizations" in const name inside organizations package
    paths:
      include:
        - internal/service/organizations
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Organizations"
    severity: WARNING
  - id: organizations-in-var-name
    languages:
      - go
    message: Do not use "Organizations" in var name inside organizations package
    paths:
      include:
      - internal/service/organizations
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Organizations"
    severity: WARNING
  - id: outposts-in-func-name
    languages:
      - go
    message: Do not use "Outposts" in func name inside outposts package
    paths:
      include:
        - internal/service/outposts
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Outposts"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: outposts-in-test-name
    languages:
      - go
    message: Include "Outposts" in test name
    paths:
      include:
        - internal/service/outposts/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOutposts"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: outposts-in-const-name
    languages:
      - go
    message: Do not use "Outposts" in const name inside outposts package
    paths:
      include:
        - internal/service/outposts
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Outposts"
    severity: WARNING
  - id: outposts-in-var-name
    languages:
      - go
    message: Do not use "Outposts" in var name inside outposts package
    paths:
      include:
      - internal/service/outposts
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Outposts"
    severity: WARNING
  - id: pinpoint-in-func-name
    languages:
      - go
    message: Do not use "Pinpoint" in func name inside pinpoint package
    paths:
      include:
        - internal/service/pinpoint
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pinpoint"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: pinpoint-in-test-name
    languages:
      - go
    message: Include "Pinpoint" in test name
    paths:
      include:
        - internal/service/pinpoint/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPinpoint"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: pinpoint-in-const-name
    languages:
      - go
    message: Do not use "Pinpoint" in const name inside pinpoint package
    paths:
      include:
        - internal/service/pinpoint
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pinpoint"
    severity: WARNING
  - id: pinpoint-in-var-name
    languages:
      - go
    message: Do not use "Pinpoint" in var name inside pinpoint package
    paths:
      include:
      - internal/service/pinpoint
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pinpoint"
    severity: WARNING
  - id: pricing-in-func-name
    languages:
      - go
    message: Do not use "Pricing" in func name inside pricing package
    paths:
      include:
        - internal/service/pricing
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pricing"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: pricing-in-test-name
    languages:
      - go
    message: Include "Pricing" in test name
    paths:
      include:
        - internal/service/pricing/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPricing"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: pricing-in-const-name
    languages:
      - go
    message: Do not use "Pricing" in const name inside pricing package
    paths:
      include:
        - internal/service/pricing
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pricing"
    severity: WARNING
  - id: pricing-in-var-name
    languages:
      - go
    message: Do not use "Pricing" in var name inside pricing package
    paths:
      include:
      - internal/service/pricing
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pricing"
    severity: WARNING
  - id: qldb-in-func-name
    languages:
      - go
    message: Do not use "QLDB" in func name inside qldb package
    paths:
      include:
        - internal/service/qldb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QLDB"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: qldb-in-test-name
    languages:
      - go
    message: Include "QLDB" in test name
    paths:
      include:
        - internal/service/qldb/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccQLDB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: qldb-in-const-name
    languages:
      - go
    message: Do not use "QLDB" in const name inside qldb package
    paths:
      include:
        - internal/service/qldb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QLDB"
    severity: WARNING
  - id: qldb-in-var-name
    languages:
      - go
    message: Do not use "QLDB" in var name inside qldb package
    paths:
      include:
      - internal/service/qldb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QLDB"
    severity: WARNING
  - id: quicksight-in-func-name
    languages:
      - go
    message: Do not use "QuickSight" in func name inside quicksight package
    paths:
      include:
        - internal/service/quicksight
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QuickSight"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: quicksight-in-test-name
    languages:
      - go
    message: Include "QuickSight" in test name
    paths:
      include:
        - internal/service/quicksight/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccQuickSight"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: quicksight-in-const-name
    languages:
      - go
    message: Do not use "QuickSight" in const name inside quicksight package
    paths:
      include:
        - internal/service/quicksight
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QuickSight"
    severity: WARNING
  - id: quicksight-in-var-name
    languages:
      - go
    message: Do not use "QuickSight" in var name inside quicksight package
    paths:
      include:
      - internal/service/quicksight
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QuickSight"
    severity: WARNING
  - id: ram-in-func-name
    languages:
      - go
    message: Do not use "RAM" in func name inside ram package
    paths:
      include:
        - internal/service/ram
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RAM"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ram-in-test-name
    languages:
      - go
    message: Include "RAM" in test name
    paths:
      include:
        - internal/service/ram/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRAM"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ram-in-const-name
    languages:
      - go
    message: Do not use "RAM" in const name inside ram package
    paths:
      include:
        - internal/service/ram
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RAM"
    severity: WARNING
  - id: ram-in-var-name
    languages:
      - go
    message: Do not use "RAM" in var name inside ram package
    paths:
      include:
      - internal/service/ram
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RAM"
    severity: WARNING
  - id: rds-in-func-name
    languages:
      - go
    message: Do not use "RDS" in func name inside rds package
    paths:
      include:
        - internal/service/rds
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RDS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: rds-in-test-name
    languages:
      - go
    message: Include "RDS" in test name
    paths:
      include:
        - internal/service/rds/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRDS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: rds-in-const-name
    languages:
      - go
    message: Do not use "RDS" in const name inside rds package
    paths:
      include:
        - internal/service/rds
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RDS"
    severity: WARNING
  - id: rds-in-var-name
    languages:
      - go
    message: Do not use "RDS" in var name inside rds package
    paths:
      include:
      - internal/service/rds
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RDS"
    severity: WARNING
  - id: redshift-in-func-name
    languages:
      - go
    message: Do not use "Redshift" in func name inside redshift package
    paths:
      include:
        - internal/service/redshift
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Redshift"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: redshift-in-test-name
    languages:
      - go
    message: Include "Redshift" in test name
    paths:
      include:
        - internal/service/redshift/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRedshift"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: redshift-in-const-name
    languages:
      - go
    message: Do not use "Redshift" in const name inside redshift package
    paths:
      include:
        - internal/service/redshift
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Redshift"
    severity: WARNING
  - id: redshift-in-var-name
    languages:
      - go
    message: Do not use "Redshift" in var name inside redshift package
    paths:
      include:
      - internal/service/redshift
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Redshift"
    severity: WARNING
  - id: resourcegroups-in-func-name
    languages:
      - go
    message: Do not use "ResourceGroups" in func name inside resourcegroups package
    paths:
      include:
        - internal/service/resourcegroups
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ResourceGroups"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: resourcegroups-in-test-name
    languages:
      - go
    message: Include "ResourceGroups" in test name
    paths:
      include:
        - internal/service/resourcegroups/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccResourceGroups"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: resourcegroups-in-const-name
    languages:
      - go
    message: Do not use "ResourceGroups" in const name inside resourcegroups package
    paths:
      include:
        - internal/service/resourcegroups
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ResourceGroups"
    severity: WARNING
  - id: resourcegroups-in-var-name
    languages:
      - go
    message: Do not use "ResourceGroups" in var name inside resourcegroups package
    paths:
      include:
      - internal/service/resourcegroups
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ResourceGroups"
    severity: WARNING
  - id: resourcegroupstaggingapi-in-func-name
    languages:
      - go
    message: Do not use "ResourceGroupsTaggingAPI" in func name inside resourcegroupstaggingapi package
    paths:
      include:
        - internal/service/resourcegroupstaggingapi
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ResourceGroupsTaggingAPI"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: resourcegroupstaggingapi-in-test-name
    languages:
      - go
    message: Include "ResourceGroupsTaggingAPI" in test name
    paths:
      include:
        - internal/service/resourcegroupstaggingapi/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccResourceGroupsTaggingAPI"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: resourcegroupstaggingapi-in-const-name
    languages:
      - go
    message: Do not use "ResourceGroupsTaggingAPI" in const name inside resourcegroupstaggingapi package
    paths:
      include:
        - internal/service/resourcegroupstaggingapi
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ResourceGroupsTaggingAPI"
    severity: WARNING
  - id: resourcegroupstaggingapi-in-var-name
    languages:
      - go
    message: Do not use "ResourceGroupsTaggingAPI" in var name inside resourcegroupstaggingapi package
    paths:
      include:
      - internal/service/resourcegroupstaggingapi
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ResourceGroupsTaggingAPI"
    severity: WARNING
  - id: resourcegroupstagging-in-func-name
    languages:
      - go
    message: Do not use "resourcegroupstagging" in func name inside resourcegroupstaggingapi package
    paths:
      include:
        - internal/service/resourcegroupstaggingapi
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)resourcegroupstagging"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: resourcegroupstagging-in-const-name
    languages:
      - go
    message: Do not use "resourcegroupstagging" in const name inside resourcegroupstaggingapi package
    paths:
      include:
        - internal/service/resourcegroupstaggingapi
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)resourcegroupstagging"
    severity: WARNING
  - id: resourcegroupstagging-in-var-name
    languages:
      - go
    message: Do not use "resourcegroupstagging" in var name inside resourcegroupstaggingapi package
    paths:
      include:
      - internal/service/resourcegroupstaggingapi
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)resourcegroupstagging"
    severity: WARNING
  - id: route53-in-func-name
    languages:
      - go
    message: Do not use "Route53" in func name inside route53 package
    paths:
      include:
        - internal/service/route53
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: route53-in-test-name
    languages:
      - go
    message: Include "Route53" in test name
    paths:
      include:
        - internal/service/route53/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRoute53"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: route53-in-const-name
    languages:
      - go
    message: Do not use "Route53" in const name inside route53 package
    paths:
      include:
        - internal/service/route53
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53"
    severity: WARNING
  - id: route53-in-var-name
    languages:
      - go
    message: Do not use "Route53" in var name inside route53 package
    paths:
      include:
      - internal/service/route53
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53"
    severity: WARNING
  - id: route53domains-in-func-name
    languages:
      - go
    message: Do not use "Route53Domains" in func name inside route53domains package
    paths:
      include:
        - internal/service/route53domains
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53Domains"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: route53domains-in-test-name
    languages:
      - go
    message: Include "Route53Domains" in test name
    paths:
      include:
        - internal/service/route53domains/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRoute53Domains"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: route53domains-in-const-name
    languages:
      - go
    message: Do not use "Route53Domains" in const name inside route53domains package
    paths:
      include:
        - internal/service/route53domains
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53Domains"
    severity: WARNING
  - id: route53domains-in-var-name
    languages:
      - go
    message: Do not use "Route53Domains" in var name inside route53domains package
    paths:
      include:
      - internal/service/route53domains
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53Domains"
    severity: WARNING
  - id: route53recoverycontrolconfig-in-func-name
    languages:
      - go
    message: Do not use "Route53RecoveryControlConfig" in func name inside route53recoverycontrolconfig package
    paths:
      include:
        - internal/service/route53recoverycontrolconfig
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53RecoveryControlConfig"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: route53recoverycontrolconfig-in-test-name
    languages:
      - go
    message: Include "Route53RecoveryControlConfig" in test name
    paths:
      include:
        - internal/service/route53recoverycontrolconfig/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRoute53RecoveryControlConfig"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: route53recoverycontrolconfig-in-const-name
    languages:
      - go
    message: Do not use "Route53RecoveryControlConfig" in const name inside route53recoverycontrolconfig package
    paths:
      include:
        - internal/service/route53recoverycontrolconfig
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53RecoveryControlConfig"
    severity: WARNING
  - id: route53recoverycontrolconfig-in-var-name
    languages:
      - go
    message: Do not use "Route53RecoveryControlConfig" in var name inside route53recoverycontrolconfig package
    paths:
      include:
      - internal/service/route53recoverycontrolconfig
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53RecoveryControlConfig"
    severity: WARNING
  - id: route53recoveryreadiness-in-func-name
    languages:
      - go
    message: Do not use "Route53RecoveryReadiness" in func name inside route53recoveryreadiness package
    paths:
      include:
        - internal/service/route53recoveryreadiness
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53RecoveryReadiness"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: route53recoveryreadiness-in-test-name
    languages:
      - go
    message: Include "Route53RecoveryReadiness" in test name
    paths:
      include:
        - internal/service/route53recoveryreadiness/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRoute53RecoveryReadiness"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: route53recoveryreadiness-in-const-name
    languages:
      - go
    message: Do not use "Route53RecoveryReadiness" in const name inside route53recoveryreadiness package
    paths:
      include:
        - internal/service/route53recoveryreadiness
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53RecoveryReadiness"
    severity: WARNING
  - id: route53recoveryreadiness-in-var-name
    languages:
      - go
    message: Do not use "Route53RecoveryReadiness" in var name inside route53recoveryreadiness package
    paths:
      include:
      - internal/service/route53recoveryreadiness
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53RecoveryReadiness"
    severity: WARNING
  - id: route53resolver-in-func-name
    languages:
      - go
    message: Do not use "Route53Resolver" in func name inside route53resolver package
    paths:
      include:
        - internal/service/route53resolver
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53Resolver"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: route53resolver-in-test-name
    languages:
      - go
    message: Include "Route53Resolver" in test name
    paths:
      include:
        - internal/service/route53resolver/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRoute53Resolver"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: route53resolver-in-const-name
    languages:
      - go
    message: Do not use "Route53Resolver" in const name inside route53resolver package
    paths:
      include:
        - internal/service/route53resolver
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53Resolver"
    severity: WARNING
  - id: route53resolver-in-var-name
    languages:
      - go
    message: Do not use "Route53Resolver" in var name inside route53resolver package
    paths:
      include:
      - internal/service/route53resolver
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Route53Resolver"
    severity: WARNING
  - id: s3api-in-func-name
    languages:
      - go
    message: Do not use "s3api" in func name inside s3 package
    paths:
      include:
        - internal/service/s3
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)s3api"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: s3api-in-const-name
    languages:
      - go
    message: Do not use "s3api" in const name inside s3 package
    paths:
      include:
        - internal/service/s3
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)s3api"
    severity: WARNING
  - id: s3api-in-var-name
    languages:
      - go
    message: Do not use "s3api" in var name inside s3 package
    paths:
      include:
      - internal/service/s3
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)s3api"
    severity: WARNING
  - id: s3-in-func-name
    languages:
      - go
    message: Do not use "S3" in func name inside s3 package
    paths:
      include:
        - internal/service/s3
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)S3"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: s3-in-test-name
    languages:
      - go
    message: Include "S3" in test name
    paths:
      include:
        - internal/service/s3/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccS3"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: s3-in-const-name
    languages:
      - go
    message: Do not use "S3" in const name inside s3 package
    paths:
      include:
        - internal/service/s3
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)S3"
    severity: WARNING
  - id: s3-in-var-name
    languages:
      - go
    message: Do not use "S3" in var name inside s3 package
    paths:
      include:
      - internal/service/s3
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)S3"
    severity: WARNING
  - id: s3control-in-func-name
    languages:
      - go
    message: Do not use "S3Control" in func name inside s3control package
    paths:
      include:
        - internal/service/s3control
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)S3Control"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: s3control-in-test-name
    languages:
      - go
    message: Include "S3Control" in test name
    paths:
      include:
        - internal/service/s3control/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccS3Control"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: s3control-in-const-name
    languages:
      - go
    message: Do not use "S3Control" in const name inside s3control package
    paths:
      include:
        - internal/service/s3control
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)S3Control"
    severity: WARNING
  - id: s3control-in-var-name
    languages:
      - go
    message: Do not use "S3Control" in var name inside s3control package
    paths:
      include:
      - internal/service/s3control
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)S3Control"
    severity: WARNING
  - id: s3outposts-in-func-name
    languages:
      - go
    message: Do not use "S3Outposts" in func name inside s3outposts package
    paths:
      include:
        - internal/service/s3outposts
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)S3Outposts"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: s3outposts-in-test-name
    languages:
      - go
    message: Include "S3Outposts" in test name
    paths:
      include:
        - internal/service/s3outposts/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccS3Outposts"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: s3outposts-in-const-name
    languages:
      - go
    message: Do not use "S3Outposts" in const name inside s3outposts package
    paths:
      include:
        - internal/service/s3outposts
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)S3Outposts"
    severity: WARNING
  - id: s3outposts-in-var-name
    languages:
      - go
    message: Do not use "S3Outposts" in var name inside s3outposts package
    paths:
      include:
      - internal/service/s3outposts
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)S3Outposts"
    severity: WARNING
  - id: sagemaker-in-func-name
    languages:
      - go
    message: Do not use "SageMaker" in func name inside sagemaker package
    paths:
      include:
        - internal/service/sagemaker
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SageMaker"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: sagemaker-in-test-name
    languages:
      - go
    message: Include "SageMaker" in test name
    paths:
      include:
        - internal/service/sagemaker/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSageMaker"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: sagemaker-in-const-name
    languages:
      - go
    message: Do not use "SageMaker" in const name inside sagemaker package
    paths:
      include:
        - internal/service/sagemaker
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SageMaker"
    severity: WARNING
  - id: sagemaker-in-var-name
    languages:
      - go
    message: Do not use "SageMaker" in var name inside sagemaker package
    paths:
      include:
      - internal/service/sagemaker
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SageMaker"
    severity: WARNING
  - id: schemas-in-func-name
    languages:
      - go
    message: Do not use "Schemas" in func name inside schemas package
    paths:
      include:
        - internal/service/schemas
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Schemas"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: schemas-in-test-name
    languages:
      - go
    message: Include "Schemas" in test name
    paths:
      include:
        - internal/service/schemas/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSchemas"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: schemas-in-const-name
    languages:
      - go
    message: Do not use "Schemas" in const name inside schemas package
    paths:
      include:
        - internal/service/schemas
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Schemas"
    severity: WARNING
  - id: schemas-in-var-name
    languages:
      - go
    message: Do not use "Schemas" in var name inside schemas package
    paths:
      include:
      - internal/service/schemas
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Schemas"
    severity: WARNING
  - id: secretsmanager-in-func-name
    languages:
      - go
    message: Do not use "SecretsManager" in func name inside secretsmanager package
    paths:
      include:
        - internal/service/secretsmanager
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SecretsManager"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: secretsmanager-in-test-name
    languages:
      - go
    message: Include "SecretsManager" in test name
    paths:
      include:
        - internal/service/secretsmanager/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSecretsManager"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: secretsmanager-in-const-name
    languages:
      - go
    message: Do not use "SecretsManager" in const name inside secretsmanager package
    paths:
      include:
        - internal/service/secretsmanager
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SecretsManager"
    severity: WARNING
  - id: secretsmanager-in-var-name
    languages:
      - go
    message: Do not use "SecretsManager" in var name inside secretsmanager package
    paths:
      include:
      - internal/service/secretsmanager
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SecretsManager"
    severity: WARNING
  - id: securityhub-in-func-name
    languages:
      - go
    message: Do not use "SecurityHub" in func name inside securityhub package
    paths:
      include:
        - internal/service/securityhub
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SecurityHub"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: securityhub-in-test-name
    languages:
      - go
    message: Include "SecurityHub" in test name
    paths:
      include:
        - internal/service/securityhub/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSecurityHub"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: securityhub-in-const-name
    languages:
      - go
    message: Do not use "SecurityHub" in const name inside securityhub package
    paths:
      include:
        - internal/service/securityhub
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SecurityHub"
    severity: WARNING
  - id: securityhub-in-var-name
    languages:
      - go
    message: Do not use "SecurityHub" in var name inside securityhub package
    paths:
      include:
      - internal/service/securityhub
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SecurityHub"
    severity: WARNING
  - id: serverlessapplicationrepository-in-func-name
    languages:
      - go
    message: Do not use "serverlessapplicationrepository" in func name inside serverlessrepo package
    paths:
      include:
        - internal/service/serverlessrepo
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)serverlessapplicationrepository"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: serverlessapplicationrepository-in-const-name
    languages:
      - go
    message: Do not use "serverlessapplicationrepository" in const name inside serverlessrepo package
    paths:
      include:
        - internal/service/serverlessrepo
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)serverlessapplicationrepository"
    severity: WARNING
  - id: serverlessapplicationrepository-in-var-name
    languages:
      - go
    message: Do not use "serverlessapplicationrepository" in var name inside serverlessrepo package
    paths:
      include:
      - internal/service/serverlessrepo
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)serverlessapplicationrepository"
    severity: WARNING
  - id: serverlessapprepo-in-func-name
    languages:
      - go
    message: Do not use "serverlessapprepo" in func name inside serverlessrepo package
    paths:
      include:
        - internal/service/serverlessrepo
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)serverlessapprepo"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: serverlessapprepo-in-const-name
    languages:
      - go
    message: Do not use "serverlessapprepo" in const name inside serverlessrepo package
    paths:
      include:
        - internal/service/serverlessrepo
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)serverlessapprepo"
    severity: WARNING
  - id: serverlessapprepo-in-var-name
    languages:
      - go
    message: Do not use "serverlessapprepo" in var name inside serverlessrepo package
    paths:
      include:
      - internal/service/serverlessrepo
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)serverlessapprepo"
    severity: WARNING
  - id: serverlessrepo-in-func-name
    languages:
      - go
    message: Do not use "ServerlessRepo" in func name inside serverlessrepo package
    paths:
      include:
        - internal/service/serverlessrepo
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServerlessRepo"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: serverlessrepo-in-test-name
    languages:
      - go
    message: Include "ServerlessRepo" in test name
    paths:
      include:
        - internal/service/serverlessrepo/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccServerlessRepo"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: serverlessrepo-in-const-name
    languages:
      - go
    message: Do not use "ServerlessRepo" in const name inside serverlessrepo package
    paths:
      include:
        - internal/service/serverlessrepo
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServerlessRepo"
    severity: WARNING
  - id: serverlessrepo-in-var-name
    languages:
      - go
    message: Do not use "ServerlessRepo" in var name inside serverlessrepo package
    paths:
      include:
      - internal/service/serverlessrepo
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServerlessRepo"
    severity: WARNING
  - id: servicecatalog-in-func-name
    languages:
      - go
    message: Do not use "ServiceCatalog" in func name inside servicecatalog package
    paths:
      include:
        - internal/service/servicecatalog
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServiceCatalog"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: servicecatalog-in-test-name
    languages:
      - go
    message: Include "ServiceCatalog" in test name
    paths:
      include:
        - internal/service/servicecatalog/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccServiceCatalog"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: servicecatalog-in-const-name
    languages:
      - go
    message: Do not use "ServiceCatalog" in const name inside servicecatalog package
    paths:
      include:
        - internal/service/servicecatalog
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServiceCatalog"
    severity: WARNING
  - id: servicecatalog-in-var-name
    languages:
      - go
    message: Do not use "ServiceCatalog" in var name inside servicecatalog package
    paths:
      include:
      - internal/service/servicecatalog
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServiceCatalog"
    severity: WARNING
  - id: servicediscovery-in-func-name
    languages:
      - go
    message: Do not use "ServiceDiscovery" in func name inside servicediscovery package
    paths:
      include:
        - internal/service/servicediscovery
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServiceDiscovery"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: servicediscovery-in-test-name
    languages:
      - go
    message: Include "ServiceDiscovery" in test name
    paths:
      include:
        - internal/service/servicediscovery/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccServiceDiscovery"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: servicediscovery-in-const-name
    languages:
      - go
    message: Do not use "ServiceDiscovery" in const name inside servicediscovery package
    paths:
      include:
        - internal/service/servicediscovery
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServiceDiscovery"
    severity: WARNING
  - id: servicediscovery-in-var-name
    languages:
      - go
    message: Do not use "ServiceDiscovery" in var name inside servicediscovery package
    paths:
      include:
      - internal/service/servicediscovery
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServiceDiscovery"
    severity: WARNING
  - id: servicequotas-in-func-name
    languages:
      - go
    message: Do not use "ServiceQuotas" in func name inside servicequotas package
    paths:
      include:
        - internal/service/servicequotas
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServiceQuotas"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: servicequotas-in-test-name
    languages:
      - go
    message: Include "ServiceQuotas" in test name
    paths:
      include:
        - internal/service/servicequotas/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccServiceQuotas"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: servicequotas-in-const-name
    languages:
      - go
    message: Do not use "ServiceQuotas" in const name inside servicequotas package
    paths:
      include:
        - internal/service/servicequotas
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServiceQuotas"
    severity: WARNING
  - id: servicequotas-in-var-name
    languages:
      - go
    message: Do not use "ServiceQuotas" in var name inside servicequotas package
    paths:
      include:
      - internal/service/servicequotas
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ServiceQuotas"
    severity: WARNING
  - id: ses-in-func-name
    languages:
      - go
    message: Do not use "SES" in func name inside ses package
    paths:
      include:
        - internal/service/ses
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SES"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ses-in-test-name
    languages:
      - go
    message: Include "SES" in test name
    paths:
      include:
        - internal/service/ses/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSES"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ses-in-const-name
    languages:
      - go
    message: Do not use "SES" in const name inside ses package
    paths:
      include:
        - internal/service/ses
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SES"
    severity: WARNING
  - id: ses-in-var-name
    languages:
      - go
    message: Do not use "SES" in var name inside ses package
    paths:
      include:
      - internal/service/ses
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SES"
    severity: WARNING
  - id: stepfunctions-in-func-name
    languages:
      - go
    message: Do not use "stepfunctions" in func name inside sfn package
    paths:
      include:
        - internal/service/sfn
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)stepfunctions"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: stepfunctions-in-const-name
    languages:
      - go
    message: Do not use "stepfunctions" in const name inside sfn package
    paths:
      include:
        - internal/service/sfn
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)stepfunctions"
    severity: WARNING
  - id: stepfunctions-in-var-name
    languages:
      - go
    message: Do not use "stepfunctions" in var name inside sfn package
    paths:
      include:
      - internal/service/sfn
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)stepfunctions"
    severity: WARNING
  - id: sfn-in-func-name
    languages:
      - go
    message: Do not use "SFN" in func name inside sfn package
    paths:
      include:
        - internal/service/sfn
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SFN"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: sfn-in-test-name
    languages:
      - go
    message: Include "SFN" in test name
    paths:
      include:
        - internal/service/sfn/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSFN"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: sfn-in-const-name
    languages:
      - go
    message: Do not use "SFN" in const name inside sfn package
    paths:
      include:
        - internal/service/sfn
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SFN"
    severity: WARNING
  - id: sfn-in-var-name
    languages:
      - go
    message: Do not use "SFN" in var name inside sfn package
    paths:
      include:
      - internal/service/sfn
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SFN"
    severity: WARNING
  - id: shield-in-func-name
    languages:
      - go
    message: Do not use "Shield" in func name inside shield package
    paths:
      include:
        - internal/service/shield
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Shield"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: shield-in-test-name
    languages:
      - go
    message: Include "Shield" in test name
    paths:
      include:
        - internal/service/shield/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccShield"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: shield-in-const-name
    languages:
      - go
    message: Do not use "Shield" in const name inside shield package
    paths:
      include:
        - internal/service/shield
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Shield"
    severity: WARNING
  - id: shield-in-var-name
    languages:
      - go
    message: Do not use "Shield" in var name inside shield package
    paths:
      include:
      - internal/service/shield
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Shield"
    severity: WARNING
  - id: signer-in-func-name
    languages:
      - go
    message: Do not use "Signer" in func name inside signer package
    paths:
      include:
        - internal/service/signer
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Signer"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: signer-in-test-name
    languages:
      - go
    message: Include "Signer" in test name
    paths:
      include:
        - internal/service/signer/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSigner"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: signer-in-const-name
    languages:
      - go
    message: Do not use "Signer" in const name inside signer package
    paths:
      include:
        - internal/service/signer
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Signer"
    severity: WARNING
  - id: signer-in-var-name
    languages:
      - go
    message: Do not use "Signer" in var name inside signer package
    paths:
      include:
      - internal/service/signer
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Signer"
    severity: WARNING
  - id: simpledb-in-func-name
    languages:
      - go
    message: Do not use "SimpleDB" in func name inside simpledb package
    paths:
      include:
        - internal/service/simpledb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SimpleDB"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: simpledb-in-test-name
    languages:
      - go
    message: Include "SimpleDB" in test name
    paths:
      include:
        - internal/service/simpledb/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSimpleDB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: simpledb-in-const-name
    languages:
      - go
    message: Do not use "SimpleDB" in const name inside simpledb package
    paths:
      include:
        - internal/service/simpledb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SimpleDB"
    severity: WARNING
  - id: simpledb-in-var-name
    languages:
      - go
    message: Do not use "SimpleDB" in var name inside simpledb package
    paths:
      include:
      - internal/service/simpledb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SimpleDB"
    severity: WARNING
  - id: sdb-in-func-name
    languages:
      - go
    message: Do not use "sdb" in func name inside simpledb package
    paths:
      include:
        - internal/service/simpledb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)sdb"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: sdb-in-const-name
    languages:
      - go
    message: Do not use "sdb" in const name inside simpledb package
    paths:
      include:
        - internal/service/simpledb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)sdb"
    severity: WARNING
  - id: sdb-in-var-name
    languages:
      - go
    message: Do not use "sdb" in var name inside simpledb package
    paths:
      include:
      - internal/service/simpledb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)sdb"
    severity: WARNING
  - id: sns-in-func-name
    languages:
      - go
    message: Do not use "SNS" in func name inside sns package
    paths:
      include:
        - internal/service/sns
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SNS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: sns-in-test-name
    languages:
      - go
    message: Include "SNS" in test name
    paths:
      include:
        - internal/service/sns/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSNS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: sns-in-const-name
    languages:
      - go
    message: Do not use "SNS" in const name inside sns package
    paths:
      include:
        - internal/service/sns
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SNS"
    severity: WARNING
  - id: sns-in-var-name
    languages:
      - go
    message: Do not use "SNS" in var name inside sns package
    paths:
      include:
      - internal/service/sns
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SNS"
    severity: WARNING
  - id: sqs-in-func-name
    languages:
      - go
    message: Do not use "SQS" in func name inside sqs package
    paths:
      include:
        - internal/service/sqs
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SQS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: sqs-in-test-name
    languages:
      - go
    message: Include "SQS" in test name
    paths:
      include:
        - internal/service/sqs/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSQS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: sqs-in-const-name
    languages:
      - go
    message: Do not use "SQS" in const name inside sqs package
    paths:
      include:
        - internal/service/sqs
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SQS"
    severity: WARNING
  - id: sqs-in-var-name
    languages:
      - go
    message: Do not use "SQS" in var name inside sqs package
    paths:
      include:
      - internal/service/sqs
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SQS"
    severity: WARNING
  - id: ssm-in-func-name
    languages:
      - go
    message: Do not use "SSM" in func name inside ssm package
    paths:
      include:
        - internal/service/ssm
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SSM"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ssm-in-test-name
    languages:
      - go
    message: Include "SSM" in test name
    paths:
      include:
        - internal/service/ssm/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSSM"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ssm-in-const-name
    languages:
      - go
    message: Do not use "SSM" in const name inside ssm package
    paths:
      include:
        - internal/service/ssm
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SSM"
    severity: WARNING
  - id: ssm-in-var-name
    languages:
      - go
    message: Do not use "SSM" in var name inside ssm package
    paths:
      include:
      - internal/service/ssm
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SSM"
    severity: WARNING
  - id: ssoadmin-in-func-name
    languages:
      - go
    message: Do not use "SSOAdmin" in func name inside ssoadmin package
    paths:
      include:
        - internal/service/ssoadmin
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SSOAdmin"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ssoadmin-in-test-name
    languages:
      - go
    message: Include "SSOAdmin" in test name
    paths:
      include:
        - internal/service/ssoadmin/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSSOAdmin"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ssoadmin-in-const-name
    languages:
      - go
    message: Do not use "SSOAdmin" in const name inside ssoadmin package
    paths:
      include:
        - internal/service/ssoadmin
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SSOAdmin"
    severity: WARNING
  - id: ssoadmin-in-var-name
    languages:
      - go
    message: Do not use "SSOAdmin" in var name inside ssoadmin package
    paths:
      include:
      - internal/service/ssoadmin
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SSOAdmin"
    severity: WARNING
  - id: storagegateway-in-func-name
    languages:
      - go
    message: Do not use "StorageGateway" in func name inside storagegateway package
    paths:
      include:
        - internal/service/storagegateway
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)StorageGateway"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: storagegateway-in-test-name
    languages:
      - go
    message: Include "StorageGateway" in test name
    paths:
      include:
        - internal/service/storagegateway/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccStorageGateway"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: storagegateway-in-const-name
    languages:
      - go
    message: Do not use "StorageGateway" in const name inside storagegateway package
    paths:
      include:
        - internal/service/storagegateway
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)StorageGateway"
    severity: WARNING
  - id: storagegateway-in-var-name
    languages:
      - go
    message: Do not use "StorageGateway" in var name inside storagegateway package
    paths:
      include:
      - internal/service/storagegateway
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)StorageGateway"
    severity: WARNING
  - id: sts-in-func-name
    languages:
      - go
    message: Do not use "STS" in func name inside sts package
    paths:
      include:
        - internal/service/sts
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)STS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: sts-in-test-name
    languages:
      - go
    message: Include "STS" in test name
    paths:
      include:
        - internal/service/sts/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSTS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: sts-in-const-name
    languages:
      - go
    message: Do not use "STS" in const name inside sts package
    paths:
      include:
        - internal/service/sts
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)STS"
    severity: WARNING
  - id: sts-in-var-name
    languages:
      - go
    message: Do not use "STS" in var name inside sts package
    paths:
      include:
      - internal/service/sts
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)STS"
    severity: WARNING
  - id: swf-in-func-name
    languages:
      - go
    message: Do not use "SWF" in func name inside swf package
    paths:
      include:
        - internal/service/swf
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SWF"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: swf-in-test-name
    languages:
      - go
    message: Include "SWF" in test name
    paths:
      include:
        - internal/service/swf/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSWF"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: swf-in-const-name
    languages:
      - go
    message: Do not use "SWF" in const name inside swf package
    paths:
      include:
        - internal/service/swf
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SWF"
    severity: WARNING
  - id: swf-in-var-name
    languages:
      - go
    message: Do not use "SWF" in var name inside swf package
    paths:
      include:
      - internal/service/swf
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)SWF"
    severity: WARNING
  - id: synthetics-in-func-name
    languages:
      - go
    message: Do not use "Synthetics" in func name inside synthetics package
    paths:
      include:
        - internal/service/synthetics
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Synthetics"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: synthetics-in-test-name
    languages:
      - go
    message: Include "Synthetics" in test name
    paths:
      include:
        - internal/service/synthetics/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccSynthetics"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: synthetics-in-const-name
    languages:
      - go
    message: Do not use "Synthetics" in const name inside synthetics package
    paths:
      include:
        - internal/service/synthetics
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Synthetics"
    severity: WARNING
  - id: synthetics-in-var-name
    languages:
      - go
    message: Do not use "Synthetics" in var name inside synthetics package
    paths:
      include:
      - internal/service/synthetics
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Synthetics"
    severity: WARNING
  - id: timestreamwrite-in-func-name
    languages:
      - go
    message: Do not use "TimestreamWrite" in func name inside timestreamwrite package
    paths:
      include:
        - internal/service/timestreamwrite
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)TimestreamWrite"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: timestreamwrite-in-test-name
    languages:
      - go
    message: Include "TimestreamWrite" in test name
    paths:
      include:
        - internal/service/timestreamwrite/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccTimestreamWrite"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: timestreamwrite-in-const-name
    languages:
      - go
    message: Do not use "TimestreamWrite" in const name inside timestreamwrite package
    paths:
      include:
        - internal/service/timestreamwrite
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)TimestreamWrite"
    severity: WARNING
  - id: timestreamwrite-in-var-name
    languages:
      - go
    message: Do not use "TimestreamWrite" in var name inside timestreamwrite package
    paths:
      include:
      - internal/service/timestreamwrite
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)TimestreamWrite"
    severity: WARNING
  - id: transfer-in-func-name
    languages:
      - go
    message: Do not use "Transfer" in func name inside transfer package
    paths:
      include:
        - internal/service/transfer
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Transfer"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: transfer-in-test-name
    languages:
      - go
    message: Include "Transfer" in test name
    paths:
      include:
        - internal/service/transfer/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccTransfer"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: transfer-in-const-name
    languages:
      - go
    message: Do not use "Transfer" in const name inside transfer package
    paths:
      include:
        - internal/service/transfer
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Transfer"
    severity: WARNING
  - id: transfer-in-var-name
    languages:
      - go
    message: Do not use "Transfer" in var name inside transfer package
    paths:
      include:
      - internal/service/transfer
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Transfer"
    severity: WARNING
  - id: waf-in-func-name
    languages:
      - go
    message: Do not use "WAF" in func name inside waf package
    paths:
      include:
        - internal/service/waf
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WAF"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: waf-in-test-name
    languages:
      - go
    message: Include "WAF" in test name
    paths:
      include:
        - internal/service/waf/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccWAF"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: waf-in-const-name
    languages:
      - go
    message: Do not use "WAF" in const name inside waf package
    paths:
      include:
        - internal/service/waf
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WAF"
    severity: WARNING
  - id: waf-in-var-name
    languages:
      - go
    message: Do not use "WAF" in var name inside waf package
    paths:
      include:
      - internal/service/waf
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WAF"
    severity: WARNING
  - id: wafregional-in-func-name
    languages:
      - go
    message: Do not use "WAFRegional" in func name inside wafregional package
    paths:
      include:
        - internal/service/wafregional
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WAFRegional"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: wafregional-in-test-name
    languages:
      - go
    message: Include "WAFRegional" in test name
    paths:
      include:
        - internal/service/wafregional/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccWAFRegional"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: wafregional-in-const-name
    languages:
      - go
    message: Do not use "WAFRegional" in const name inside wafregional package
    paths:
      include:
        - internal/service/wafregional
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WAFRegional"
    severity: WARNING
  - id: wafregional-in-var-name
    languages:
      - go
    message: Do not use "WAFRegional" in var name inside wafregional package
    paths:
      include:
      - internal/service/wafregional
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WAFRegional"
    severity: WARNING
  - id: wafv2-in-func-name
    languages:
      - go
    message: Do not use "WAFV2" in func name inside wafv2 package
    paths:
      include:
        - internal/service/wafv2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WAFV2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: wafv2-in-test-name
    languages:
      - go
    message: Include "WAFV2" in test name
    paths:
      include:
        - internal/service/wafv2/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccWAFV2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: wafv2-in-const-name
    languages:
      - go
    message: Do not use "WAFV2" in const name inside wafv2 package
    paths:
      include:
        - internal/service/wafv2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WAFV2"
    severity: WARNING
  - id: wafv2-in-var-name
    languages:
      - go
    message: Do not use "WAFV2" in var name inside wafv2 package
    paths:
      include:
      - internal/service/wafv2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WAFV2"
    severity: WARNING
  - id: worklink-in-func-name
    languages:
      - go
    message: Do not use "WorkLink" in func name inside worklink package
    paths:
      include:
        - internal/service/worklink
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WorkLink"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: worklink-in-test-name
    languages:
      - go
    message: Include "WorkLink" in test name
    paths:
      include:
        - internal/service/worklink/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccWorkLink"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: worklink-in-const-name
    languages:
      - go
    message: Do not use "WorkLink" in const name inside worklink package
    paths:
      include:
        - internal/service/worklink
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WorkLink"
    severity: WARNING
  - id: worklink-in-var-name
    languages:
      - go
    message: Do not use "WorkLink" in var name inside worklink package
    paths:
      include:
      - internal/service/worklink
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WorkLink"
    severity: WARNING
  - id: workspaces-in-func-name
    languages:
      - go
    message: Do not use "WorkSpaces" in func name inside workspaces package
    paths:
      include:
        - internal/service/workspaces
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WorkSpaces"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: workspaces-in-test-name
    languages:
      - go
    message: Include "WorkSpaces" in test name
    paths:
      include:
        - internal/service/workspaces/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccWorkSpaces"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: workspaces-in-const-name
    languages:
      - go
    message: Do not use "WorkSpaces" in const name inside workspaces package
    paths:
      include:
        - internal/service/workspaces
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WorkSpaces"
    severity: WARNING
  - id: workspaces-in-var-name
    languages:
      - go
    message: Do not use "WorkSpaces" in var name inside workspaces package
    paths:
      include:
      - internal/service/workspaces
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)WorkSpaces"
    severity: WARNING
  - id: xray-in-func-name
    languages:
      - go
    message: Do not use "XRay" in func name inside xray package
    paths:
      include:
        - internal/service/xray
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)XRay"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: xray-in-test-name
    languages:
      - go
    message: Include "XRay" in test name
    paths:
      include:
        - internal/service/xray/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccXRay"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: xray-in-const-name
    languages:
      - go
    message: Do not use "XRay" in const name inside xray package
    paths:
      include:
        - internal/service/xray
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)XRay"
    severity: WARNING
  - id: xray-in-var-name
    languages:
      - go
    message: Do not use "XRay" in var name inside xray package
    paths:
      include:
      - internal/service/xray
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)XRay"
    severity: WARNING
