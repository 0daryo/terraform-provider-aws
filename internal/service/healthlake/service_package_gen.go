// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package healthlake

import (
	"context"
	aws_sdkv2 "github.com/aws/aws-sdk-go-v2/aws"
	healthlake_sdkv2 "github.com/aws/aws-sdk-go-v2/service/healthlake"
	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*types.ServicePackageFrameworkDataSource {
	return []*types.ServicePackageFrameworkDataSource{}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []*types.ServicePackageFrameworkResource {
	return []*types.ServicePackageFrameworkResource{}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) []*types.ServicePackageSDKDataSource {
	return []*types.ServicePackageSDKDataSource{}
}

func (p *servicePackage) SDKResources(ctx context.Context) []*types.ServicePackageSDKResource {
	return []*types.ServicePackageSDKResource{}
}

func (p *servicePackage) ServicePackageName() string {
	return names.HealthLake
}

// NewClient returns a new AWS SDK for Go v2 client for this service package's AWS API.
func (p *servicePackage) NewClient(ctx context.Context, cfg aws_sdkv2.Config, endpoint string) *healthlake_sdkv2.Client {
	return healthlake_sdkv2.NewFromConfig(cfg, func(o *healthlake_sdkv2.Options) {
		if endpoint != "" {
			o.EndpointResolver = healthlake_sdkv2.EndpointResolverFromURL(endpoint)
		}
	})
}

var ServicePackage = &servicePackage{}
