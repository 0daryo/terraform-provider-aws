// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []func(context.Context) (datasource.DataSourceWithConfigure, error) {
	return []func(context.Context) (datasource.DataSourceWithConfigure, error){
		newDataSourceSecurityGroupRule,
		newDataSourceSecurityGroupRules,
	}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []func(context.Context) (resource.ResourceWithConfigure, error) {
	return []func(context.Context) (resource.ResourceWithConfigure, error){
		newResourceSecurityGroupEgressRule,
		newResourceSecurityGroupIngressRule,
	}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_ami":                                        DataSourceAMI,
		"aws_ami_ids":                                    DataSourceAMIIDs,
		"aws_availability_zone":                          DataSourceAvailabilityZone,
		"aws_availability_zones":                         DataSourceAvailabilityZones,
		"aws_customer_gateway":                           DataSourceCustomerGateway,
		"aws_ebs_default_kms_key":                        DataSourceEBSDefaultKMSKey,
		"aws_ebs_encryption_by_default":                  DataSourceEBSEncryptionByDefault,
		"aws_ebs_snapshot":                               DataSourceEBSSnapshot,
		"aws_ebs_snapshot_ids":                           DataSourceEBSSnapshotIDs,
		"aws_ebs_volume":                                 DataSourceEBSVolume,
		"aws_ebs_volumes":                                DataSourceEBSVolumes,
		"aws_ec2_client_vpn_endpoint":                    DataSourceClientVPNEndpoint,
		"aws_ec2_coip_pool":                              DataSourceCoIPPool,
		"aws_ec2_coip_pools":                             DataSourceCoIPPools,
		"aws_ec2_host":                                   DataSourceHost,
		"aws_ec2_instance_type":                          DataSourceInstanceType,
		"aws_ec2_instance_type_offering":                 DataSourceInstanceTypeOffering,
		"aws_ec2_instance_type_offerings":                DataSourceInstanceTypeOfferings,
		"aws_ec2_instance_types":                         DataSourceInstanceTypes,
		"aws_ec2_local_gateway":                          DataSourceLocalGateway,
		"aws_ec2_local_gateway_route_table":              DataSourceLocalGatewayRouteTable,
		"aws_ec2_local_gateway_route_tables":             DataSourceLocalGatewayRouteTables,
		"aws_ec2_local_gateway_virtual_interface":        DataSourceLocalGatewayVirtualInterface,
		"aws_ec2_local_gateway_virtual_interface_group":  DataSourceLocalGatewayVirtualInterfaceGroup,
		"aws_ec2_local_gateway_virtual_interface_groups": DataSourceLocalGatewayVirtualInterfaceGroups,
		"aws_ec2_local_gateways":                         DataSourceLocalGateways,
		"aws_ec2_managed_prefix_list":                    DataSourceManagedPrefixList,
		"aws_ec2_managed_prefix_lists":                   DataSourceManagedPrefixLists,
		"aws_ec2_network_insights_analysis":              DataSourceNetworkInsightsAnalysis,
		"aws_ec2_network_insights_path":                  DataSourceNetworkInsightsPath,
		"aws_ec2_serial_console_access":                  DataSourceSerialConsoleAccess,
		"aws_ec2_spot_price":                             DataSourceSpotPrice,
		"aws_ec2_transit_gateway":                        DataSourceTransitGateway,
		"aws_ec2_transit_gateway_attachment":             DataSourceTransitGatewayAttachment,
		"aws_ec2_transit_gateway_connect":                DataSourceTransitGatewayConnect,
		"aws_ec2_transit_gateway_connect_peer":           DataSourceTransitGatewayConnectPeer,
		"aws_ec2_transit_gateway_dx_gateway_attachment":  DataSourceTransitGatewayDxGatewayAttachment,
		"aws_ec2_transit_gateway_multicast_domain":       DataSourceTransitGatewayMulticastDomain,
		"aws_ec2_transit_gateway_peering_attachment":     DataSourceTransitGatewayPeeringAttachment,
		"aws_ec2_transit_gateway_route_table":            DataSourceTransitGatewayRouteTable,
		"aws_ec2_transit_gateway_route_tables":           DataSourceTransitGatewayRouteTables,
		"aws_ec2_transit_gateway_vpc_attachment":         DataSourceTransitGatewayVPCAttachment,
		"aws_ec2_transit_gateway_vpc_attachments":        DataSourceTransitGatewayVPCAttachments,
		"aws_ec2_transit_gateway_vpn_attachment":         DataSourceTransitGatewayVPNAttachment,
		"aws_eip":                                        DataSourceEIP,
		"aws_eips":                                       DataSourceEIPs,
		"aws_instance":                                   DataSourceInstance,
		"aws_instances":                                  DataSourceInstances,
		"aws_internet_gateway":                           DataSourceInternetGateway,
		"aws_key_pair":                                   DataSourceKeyPair,
		"aws_launch_template":                            DataSourceLaunchTemplate,
		"aws_nat_gateway":                                DataSourceNATGateway,
		"aws_nat_gateways":                               DataSourceNATGateways,
		"aws_network_acls":                               DataSourceNetworkACLs,
		"aws_network_interface":                          DataSourceNetworkInterface,
		"aws_network_interfaces":                         DataSourceNetworkInterfaces,
		"aws_prefix_list":                                DataSourcePrefixList,
		"aws_route":                                      DataSourceRoute,
		"aws_route_table":                                DataSourceRouteTable,
		"aws_route_tables":                               DataSourceRouteTables,
		"aws_security_group":                             DataSourceSecurityGroup,
		"aws_security_groups":                            DataSourceSecurityGroups,
		"aws_subnet":                                     DataSourceSubnet,
		"aws_subnet_ids":                                 DataSourceSubnetIDs,
		"aws_subnets":                                    DataSourceSubnets,
		"aws_vpc":                                        DataSourceVPC,
		"aws_vpc_dhcp_options":                           DataSourceVPCDHCPOptions,
		"aws_vpc_endpoint":                               DataSourceVPCEndpoint,
		"aws_vpc_endpoint_service":                       DataSourceVPCEndpointService,
		"aws_vpc_ipam_pool":                              DataSourceIPAMPool,
		"aws_vpc_ipam_pool_cidrs":                        DataSourceIPAMPoolCIDRs,
		"aws_vpc_ipam_pools":                             DataSourceIPAMPools,
		"aws_vpc_ipam_preview_next_cidr":                 DataSourceIPAMPreviewNextCIDR,
		"aws_vpc_peering_connection":                     DataSourceVPCPeeringConnection,
		"aws_vpc_peering_connections":                    DataSourceVPCPeeringConnections,
		"aws_vpcs":                                       DataSourceVPCs,
		"aws_vpn_gateway":                                DataSourceVPNGateway,
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{}
}

func (p *servicePackage) ServicePackageName() string {
	return names.EC2
}

var ServicePackage = &servicePackage{}
