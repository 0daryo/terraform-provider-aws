// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package networkmanager

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []func(context.Context) (datasource.DataSourceWithConfigure, error) {
	return []func(context.Context) (datasource.DataSourceWithConfigure, error){}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []func(context.Context) (resource.ResourceWithConfigure, error) {
	return []func(context.Context) (resource.ResourceWithConfigure, error){}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_networkmanager_connection":                   DataSourceConnection,
		"aws_networkmanager_connections":                  DataSourceConnections,
		"aws_networkmanager_core_network_policy_document": DataSourceCoreNetworkPolicyDocument,
		"aws_networkmanager_device":                       DataSourceDevice,
		"aws_networkmanager_devices":                      DataSourceDevices,
		"aws_networkmanager_global_network":               DataSourceGlobalNetwork,
		"aws_networkmanager_global_networks":              DataSourceGlobalNetworks,
		"aws_networkmanager_link":                         DataSourceLink,
		"aws_networkmanager_links":                        DataSourceLinks,
		"aws_networkmanager_site":                         DataSourceSite,
		"aws_networkmanager_sites":                        DataSourceSites,
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{}
}

func (p *servicePackage) ServicePackageName() string {
	return names.NetworkManager
}

var ServicePackage = &servicePackage{}
