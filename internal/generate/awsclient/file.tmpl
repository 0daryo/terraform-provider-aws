// Code generated by internal/generate/awsclient/main.go; DO NOT EDIT.
package conns

import (
	"context"
	"net/http"
	"sync"

{{ range .Services }}
	{{- if eq .SDKVersion "1" }}
	{{ .GoV1Package }}_sdkv1 "github.com/aws/aws-sdk-go/service/{{ .GoV1Package }}"
	{{- end }}
	{{- if eq .SDKVersion "2" "1,2" }}
	{{ .GoV2Package }}_sdkv2 "github.com/aws/aws-sdk-go-v2/service/{{ .GoV2Package }}"
	{{- end }}
{{- end }}
	session_sdkv1 "github.com/aws/aws-sdk-go/aws/session"
	"github.com/hashicorp/terraform-provider-aws/internal/errs"
	tftags "github.com/hashicorp/terraform-provider-aws/internal/tags"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type AWSClient struct {
	AccountID                 string
	DefaultTagsConfig         *tftags.DefaultConfig
	DNSSuffix                 string
	IgnoreTagsConfig          *tftags.IgnoreConfig
	MediaConvertAccountConn   *mediaconvert_sdkv1.MediaConvert
	Partition                 string
	Region                    string
	ReverseDNSPrefix          string
	ServicePackages           map[string]ServicePackage
	Session                   *session_sdkv1.Session
	TerraformVersion          string

	clients                   map[string]any
	conns                     map[string]any
	httpClient                *http.Client
	lock                      sync.Mutex

{{ range .Services }}
	{{- if ne .SDKVersion "1,2" }}{{continue}}{{- end }}
	{{ .ProviderPackage }}Client lazyClient[*{{ .GoV2Package }}_sdkv2.Client]
{{- end }}

{{ range .Services }}
	{{- if eq .SDKVersion "1" }}
	{{ .ProviderPackage }}Conn *{{ .GoV1Package }}_sdkv1.{{ .GoV1ClientTypeName }}
	{{- else if eq .SDKVersion "2" }}
	{{ .ProviderPackage }}Client *{{ .GoV2Package }}_sdkv2.Client
	{{- end }}
{{- end }}
}

{{ range .Services }}
	{{- if eq .SDKVersion "1" }}
func (c *AWSClient) {{ .ProviderNameUpper }}Conn(ctx context.Context) *{{ .GoV1Package }}_sdkv1.{{ .GoV1ClientTypeName }} {
	return errs.Must(conn[*{{ .GoV1Package }}_sdkv1.{{ .GoV1ClientTypeName }}](ctx, c, names.{{ .ProviderNameUpper }}))
}
	{{- else if eq .SDKVersion "2" "1,2"}}
func (c *AWSClient) {{ .ProviderNameUpper }}Client(ctx context.Context) *{{ .GoV2Package }}_sdkv2.Client {
	return errs.Must(client[*{{ .GoV2Package }}_sdkv2.Client](ctx, c, names.{{ .ProviderNameUpper }}))
}
	{{- end }}
{{ end }}
