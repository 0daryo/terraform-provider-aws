// Code generated by internal/generate/clientconfig/main.go; DO NOT EDIT.
package conns

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/session"
	aws_sdkv2 "github.com/aws/aws-sdk-go-v2/aws"
{{- range .Services }}
	"github.com/aws/aws-sdk-go{{ if eq .SDKVersion "2" }}-v2{{ end }}/service/{{ .GoPackage }}"
{{- end }}
	"github.com/hashicorp/terraform-provider-aws/names"
)

// sdkv1Conns initializes AWS SDK for Go v1 clients.
func (c *Config) sdkv1Conns(client *AWSClient, sess *session.Session) {
	{{- range .Services }}
	{{- if eq .SDKVersion "1" }}
	client.{{ .ProviderNameUpper }}Conn = {{ .GoPackage }}.New(sess.Copy(&aws.Config{Endpoint: aws.String(c.Endpoints[names.{{ .ProviderNameUpper }}])}))
	{{- end }}
	{{- end }}
}

// sdkv2Conns initializes AWS SDK for Go v2 clients.
func (c *Config) sdkv2Conns(client *AWSClient, cfg aws_sdkv2.Config) {
	{{- range .Services }}
	{{- if eq .SDKVersion "2" }}
	client.{{ .ProviderNameUpper }}Client = {{ .GoPackage }}.NewFromConfig(cfg, func(o *{{ .GoPackage }}.Options) {
		if endpoint := c.Endpoints[names.{{ .ProviderNameUpper }}]; endpoint != "" {
			o.EndpointResolver = {{ .GoPackage }}.EndpointResolverFromURL(endpoint)
		}
	})
	{{- end }}
	{{- end }}
}