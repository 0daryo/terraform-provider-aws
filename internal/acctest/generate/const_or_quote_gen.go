// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
// Code generated by internal/generate/acctestconsts/main.go; DO NOT EDIT.

package generate

import (
	"fmt"
)

// ConstOrQuote returns the constant name for the given attribute if it exists.
// Otherwise, it returns the attribute quoted. This is intended for use in
// generated code and templates.
func ConstOrQuote(constant string) string {
	allConstants := map[string]string{
		"0":                     "Ct0",
		"0.5":                   "Ct0Point5",
		"1":                     "Ct1",
		"10":                    "Ct10",
		"100":                   "Ct100",
		"1000":                  "Ct1000",
		"10000":                 "Ct10000",
		"1001":                  "Ct1001",
		"1024":                  "Ct1024",
		"11":                    "Ct11",
		"12":                    "Ct12",
		"120":                   "Ct120",
		"1200":                  "Ct1200",
		"123":                   "Ct123",
		"1234":                  "Ct1234",
		"125":                   "Ct125",
		"123456789012":          "Ct12Digit",
		"13":                    "Ct13",
		"14":                    "Ct14",
		"15":                    "Ct15",
		"150":                   "Ct150",
		"16":                    "Ct16",
		"180":                   "Ct180",
		"1.0":                   "Ct1Point0",
		"1.1":                   "Ct1Point1",
		"1.5":                   "Ct1Point5",
		"2":                     "Ct2",
		"20":                    "Ct20",
		"200":                   "Ct200",
		"2000":                  "Ct2000",
		"20000":                 "Ct20000",
		"22":                    "Ct22",
		"25":                    "Ct25",
		"250":                   "Ct250",
		"2.5":                   "Ct2Point5",
		"3":                     "Ct3",
		"30":                    "Ct30",
		"300":                   "Ct300",
		"30000":                 "Ct30000",
		"35":                    "Ct35",
		"3600":                  "Ct3600",
		"365":                   "Ct365",
		"4":                     "Ct4",
		"40":                    "Ct40",
		"4000":                  "Ct4000",
		"404":                   "Ct404",
		"4096":                  "Ct4096",
		"443":                   "Ct443",
		"5":                     "Ct5",
		"50":                    "Ct50",
		"500":                   "Ct500",
		"5000":                  "Ct5000",
		"512":                   "Ct512",
		"6":                     "Ct6",
		"60":                    "Ct60",
		"600":                   "Ct600",
		"7":                     "Ct7",
		"70":                    "Ct70",
		"75":                    "Ct75",
		"8":                     "Ct8",
		"80":                    "Ct80",
		"8080":                  "Ct8080",
		"9":                     "Ct9",
		"90":                    "Ct90",
		"99":                    "Ct99",
		"9999":                  "Ct9999",
		"basic":                 "CtBasic",
		"certificate_pem":       "CtCertificatePEM",
		"disappears":            "CtDisappears",
		"false":                 "CtFalse",
		"FALSE":                 "CtFalseCaps",
		"key1":                  "CtKey1",
		"key2":                  "CtKey2",
		"name":                  "CtName",
		"-1":                    "CtNegative1",
		"-2":                    "CtNegative2",
		"overlapkey1":           "CtOverlapKey1",
		"overlapkey2":           "CtOverlapKey2",
		"private_key_pem":       "CtPrivateKeyPEM",
		"providerkey1":          "CtProviderKey1",
		"provider_tags":         "CtProviderTags",
		"providervalue1":        "CtProviderValue1",
		"providervalue1again":   "CtProviderValue1Again",
		"providervalue1updated": "CtProviderValue1Updated",
		"rName":                 "CtRName",
		"resourcekey1":          "CtResourceKey1",
		"resourcekey2":          "CtResourceKey2",
		"resource_owner":        "CtResourceOwner",
		"resource_tags":         "CtResourceTags",
		"resourcevalue1":        "CtResourceValue1",
		"resourcevalue1again":   "CtResourceValue1Again",
		"resourcevalue1updated": "CtResourceValue1Updated",
		"resourcevalue2":        "CtResourceValue2",
		"resourcevalue2updated": "CtResourceValue2Updated",
		"rule.#":                "CtRulePound",
		"tags_all.%":            "CtTagsAllPercent",
		"tags.key1":             "CtTagsKey1",
		"tags.key2":             "CtTagsKey2",
		"tags.%":                "CtTagsPercent",
		"true":                  "CtTrue",
		"TRUE":                  "CtTrueCaps",
		"value1":                "CtValue1",
		"value1updated":         "CtValue1Updated",
		"value2":                "CtValue2",
	}

	if v, ok := allConstants[constant]; ok {
		return fmt.Sprintf("acctest.%s", v)
	}
	return fmt.Sprintf("%q", constant)
}
