rules:
  - id: avoid-diag_FromErr
    fix: sdkdiag.AppendFromErr(diags, $ERR)
    languages: [go]
    message: Prefer `sdkdiag.AppendFromErr` to `diag.FromErr`
    paths:
      exclude:
        - internal/service/a[d-z]*
        - internal/service/[b-z]*
    patterns:
      - pattern: diag.FromErr($ERR)
    severity: WARNING

  - id: avoid-diag_Errorf
    fix-regex:
      regex: diag\.Errorf\((.*)\)
      replacement: sdkdiag.AppendErrorf(diags, \1)
    languages: [go]
    message: Prefer `sdkdiag.AppendErrorf` to `diag.Errorf`
    paths:
      exclude:
        - internal/service/a[d-z]*
        - internal/service/[b-z]*
    patterns:
      - pattern: diag.Errorf(...)
    severity: WARNING

  - id: append-Read-to-diags
    fix-regex:
      regex: return (resource\w+Read\(.*\))
      replacement: return append(diags, \1...)
    languages: [go]
    message: Append results of $READFN to diags instead of returning directly
    paths:
      exclude:
        - internal/service/a[d-z]*
        - internal/service/[b-z]*
    patterns:
      - pattern: return $READFN(...)
      - metavariable-regex:
          metavariable: "$READFN"
          regex: resource\w+Read
    severity: WARNING

  - id: return-diags-not-nil
    fix-regex:
      regex: return nil
      replacement: return diags
    languages: [go]
    message: Return diags instead of nil
    paths:
      include:
        - internal/service
      exclude:
        - internal/service/a[d-z]*
        - internal/service/[b-z]*
    patterns:
      - pattern: return nil
      - pattern-not-inside: |
          func(...) {
            ...
          }
      - pattern-inside: |
          func $F(...) diag.Diagnostics {
            ...
          }
    severity: WARNING
