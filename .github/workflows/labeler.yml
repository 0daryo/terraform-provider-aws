name: 'Labeler'

on:
  issues:
    types:
      - assigned
      - closed
      - opened
      - labeled
  pull_request:
    types:
      - opened
      - closed
      - labeled
  issue_comment:
    types:
      - created

jobs:
  # The community_check job takes an input of 'username' to detetmine the
  # user's association type. What we should pass to this input depends on
  # what kind of event triggered the workflow to run, so we need to figure
  # out what type of event triggered the run and grab the necessary value
  # based on that.
  trigger_type:
    name: 'Gather Username for Community Check'
    runs-on: ubuntu-latest
    outputs:
      username: ${{ steps.determination.outputs.username }}
    steps:
      - id: determination
        run: |
          case ${{ github.event_name }} in
            issues)
              # If the event is assigned, we need the assignee's username, which will otherwise be empty, resulting
              # in a false evaluation. In all other cases, we want the issue author's username, so fall back to that.
              echo "username="${{ github.event.assignee.user.login || github.event.issue.user.login }} >> $GITHUB_OUTPUT
              ;;

            pull_request)
              echo "username="${{ github.event.pull_request.user.login }} >> $GITHUB_OUTPUT
              ;;

            issue_comment)
              echo "username="${{ github.event.comment.user.login }} >> $GITHUB_OUTPUT
              ;;
          esac

  community_check:
    name: 'Community Check'
    needs: trigger_type
    uses: ./.github/workflows/community-check.yml
    secrets: inherit
    with:
      username: ${{ needs.trigger_type.outputs.username }}

  # The triage_labels job has a series of steps that determine what labels should be added or
  # removed in a given scenario. It outputs a string list at the end, which will be passed to the
  # reusable workflow that adds and removes labels in one go.
  triage_labels:
    name: 'Determine Triage Labels'
    needs: community_check
    runs-on: ubuntu-latest
    env:
      LABELS_TO_ADD: '[]'
      LABELS_TO_REMOVE: '[]'
    outputs:
      labels_to_add: ${{ steps.out.outputs.labels_to_add }}
      labels_to_remove: ${{ steps.out.outputs.labels_to_remove }}
    steps:
        # Adds needs-triage to newly opened issues/pull requests for non-maintainers
      - name: 'Add needs-triage to non-maintainers'
        if: github.event.action == 'opened' && needs.community_check.outputs.maintainer == 'false'
        run: |
          echo "LABELS_TO_ADD="$(echo "$LABELS_TO_ADD" | jq -c '. + ["needs-triage"]') >> $GITHUB_ENV

        # Adds prioritized to newly opened maintainer pull requests
      - name: 'Add prioritized to maintainer PRs'
        if: github.event_name == 'pull_request' && github.event.action == 'opened' && needs.community_check.outputs.maintainer == 'true'
        run: |
          echo "LABELS_TO_ADD="$(echo "$LABELS_TO_ADD" | jq -c '. + ["prioritized"]') >> $GITHUB_ENV

        # Adds partner for newly opened partner pull requests
      - name: 'Add partner to partner PRs'
        if: github.event_name == 'pull_request' && github.event.action == 'opened' && needs.community_check.outputs.partner == 'true'
        run: |
          echo "LABELS_TO_ADD="$(echo "$LABELS_TO_ADD" | jq -c '. + ["partner"]') >> $GITHUB_ENV

        # Adds external-maintainer to newly opened external maintainer pull requests
      - name: 'Add external-maintainer to external maintainer PRs'
        if: github.event_name == 'pull_request' && github.event.action == 'opened' && needs.community_check.outputs.core_contributor == 'true'
        run: |
          echo "LABELS_TO_ADD="$(echo "$LABELS_TO_ADD" | jq -c '. + ["external-maintainer"]') >> $GITHUB_ENV

        # Add prioritized to issues assigned to maintainers
      - name: 'Add prioritized to assigned issues'
        if: github.event.action == 'assigned' && needs.community_check.outputs.maintainer == 'true'
        run: |
          echo "LABELS_TO_ADD="$(echo "$LABELS_TO_ADD" | jq -c '. + ["prioritized"]') >> $GITHUB_ENV

        # Adds prioritized when the regression label is added
      - name: 'Add prioritized to assigned issues'
        if: github.event.label.name == 'regression'
        run: |
          echo "LABELS_TO_ADD="$(echo "$LABELS_TO_ADD" | jq -c '. + ["prioritized"]') >> $GITHUB_ENV

        # Clears stale and waiting-response when a non-maintainer responds to an issue or pull request
      - name: 'Remove stale and waiting-response on reply'
        if: github.event_name == 'issue_comment' && needs.community_check.outputs.maintainer == 'false'
        run: |
          echo "LABELS_TO_REMOVE="$(echo "$LABELS_TO_REMOVE" | jq -c '. + ["stale","waiting-response"]') >> $GITHUB_ENV

        # Removes needs-triage and waiting-response from closed issues and pull requests.
      - name: 'Remove unneeded status labels on close'
        if: github.event.action == 'closed'
        run: |
          echo "LABELS_TO_REMOVE="$(echo "$LABELS_TO_REMOVE" | jq -c '. + ["needs-triage","waiting-response"]') >> $GITHUB_ENV

        # Outputs the final list of labels to add and remove
      - name: 'Set the output'
        id: out
        run: |
          echo "labels_to_add="${{ join(fromJSON(env.LABELS_TO_ADD)) }} >> $GITHUB_OUTPUT
          echo "labels_to_remove="${{ join(fromJSON(env.LABELS_TO_REMOVE)) }} >> $GITHUB_OUTPUT

  # Apply the labels gathered from the previous job
  apply_triage_labels:
    name: 'Apply Triage Labels'
    if: ${{ !github.event.act }}
    needs: triage_labels
    uses: ./.github/workflows/reusable-add-or-remove-labels.yml
    with:
      add: ${{ needs.triage_labels.outputs.labels_to_add }}
      remove: ${{ needs.triage_labels.outputs.labels_to_remove }}

  # Apply service-level labels to issues
  main_issue_labels:
    name: 'Main Issue Labels'
    if: github.event_name == 'issues' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - name: 'Apply Labels'
        if: ${{ !github.event.act }}
        uses: github/issue-labeler@e24a3eb6b2e28c8904d086302a2b760647f5f45c # v3.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler-issue-triage.yml
          enable-versioned-regex: 0
          include-title: 1

  # Apply service-level labels to pull requests
  main_pr_labels:
    name: 'Main Pull Request Labels'
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repo'
        if: ${{ !github.event.act }}
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9

      - name: 'Apply Labels'
        if: ${{ !github.event.act }}
        uses: actions/labeler@ba790c862c380240c6d5e7427be5ace9a05c754b # v4.0.3
        with:
          configuration-path: .github/labeler-pr-triage.yml
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  # Pull Request size labeler
  pr_size_labeler:
    name: 'Size Labeler for Pull Requests'
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - name: 'Apply Size Labels'
        if: ${{ !github.event.act }}
        uses: codelytv/pr-size-labeler@54ef36785e9f4cb5ecf1949cfc9b00dbb621d761 # v1.8.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/XS'
          xs_max_size: '30'
          s_label: 'size/S'
          s_max_size: '60'
          m_label: 'size/M'
          m_max_size: '150'
          l_label: 'size/L'
          l_max_size: '300'
          xl_label: 'size/XL'
          message_if_xl: ''

  # This job only runs locally for testing
  tests:
    name: 'Tests: For Local Testing'
    needs: [trigger_type, triage_labels]
    if: github.event.act
    runs-on: ubuntu-latest
    steps:
      - name: 'Test: trigger_type'
        if: github.event.act_tests.trigger_type && (needs.trigger_type.outputs.username != github.event.act_expect)
        run: |
          echo "Expected: \"${{ github.event.act_expect }}\""
          echo "Got:      \"${{ needs.trigger_type.outputs.username }}\""
          exit 1

      - name: 'Test: triage_labels.labels_to_add'
        if: github.event.act_tests.triage_labels_add && (needs.triage_labels.outputs.labels_to_add != github.event.act_expect)
        run: |
          echo "Expected: \"${{ github.event.act_expect }}\""
          echo "Got:      \"${{ needs.triage_labels.outputs.labels_to_add }}\""
          exit 1

      - name: 'Test: triage_labels.labels_to_remove'
        if: github.event.act_tests.triage_labels_remove && (needs.triage_labels.outputs.labels_to_remove != github.event.act_expect)
        run: |
          echo "Expected: \"${{ github.event.act_expect }}\""
          echo "Got:      \"${{ needs.triage_labels.outputs.labels_to_remove }}\""
          exit 1
